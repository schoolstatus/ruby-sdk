# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # Key Model.
  class Key < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :display

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['display'] = 'display'
      @_hash
    end

    def initialize(id = nil,
                   display = nil)
      @id = id
      @display = display
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash['id']
      display = hash['display']

      # Create object from extracted values.
      Key.new(id,
              display)
    end

    def self.from_element(root)
      id = XmlUtilities.from_element(root, 'Id', String)
      display = XmlUtilities.from_element(root, 'Display', String)

      new(id,
          display)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'Id', id)
      XmlUtilities.add_as_subelement(doc, root, 'Display', display)

      root
    end
  end
end
