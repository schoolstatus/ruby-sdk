# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # TnE911AddressResponse Model.
  class TnE911AddressResponse < BaseModel
    # TODO: Write general description for this method
    # @return [TnE911Address]
    attr_accessor :payload

    # TODO: Write general description for this method
    # @return [EmergencyNotificationGroupPayload]
    attr_accessor :emergency_notification_group

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['payload'] = 'payload'
      @_hash['emergency_notification_group'] = 'emergencyNotificationGroup'
      @_hash
    end

    def initialize(payload = nil,
                   emergency_notification_group = nil)
      @payload = payload
      @emergency_notification_group = emergency_notification_group
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      payload = TnE911Address.from_hash(hash['payload']) if hash['payload']
      if hash['emergencyNotificationGroup']
        emergency_notification_group = EmergencyNotificationGroupPayload.from_hash(hash['emergencyNotificationGroup'])
      end

      # Create object from extracted values.
      TnE911AddressResponse.new(payload,
                                emergency_notification_group)
    end

    def self.from_element(root)
      payload = XmlUtilities.from_element(root, 'Address', TnE911Address)
      emergency_notification_group = XmlUtilities.from_element(
        root, 'EmergencyNotificationGroup',
        EmergencyNotificationGroupPayload
      )

      new(payload,
          emergency_notification_group)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'Address', payload)
      XmlUtilities.add_as_subelement(doc, root, 'EmergencyNotificationGroup',
                                     emergency_notification_group)

      root
    end
  end
end
