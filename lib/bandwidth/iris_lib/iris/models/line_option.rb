# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # LineOption Model.
  class LineOption < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :telephone_number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :number_format

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :rpid_format

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :rewrite_user

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :call_forward

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :cnam_lookup

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :protect

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :sms

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['telephone_number'] = 'telephoneNumber'
      @_hash['number_format'] = 'numberFormat'
      @_hash['rpid_format'] = 'rpidFormat'
      @_hash['rewrite_user'] = 'rewriteUser'
      @_hash['call_forward'] = 'callForward'
      @_hash['cnam_lookup'] = 'cnamLookup'
      @_hash['protect'] = 'protect'
      @_hash['sms'] = 'sms'
      @_hash
    end

    def initialize(telephone_number = nil,
                   number_format = nil,
                   rpid_format = nil,
                   rewrite_user = nil,
                   call_forward = nil,
                   cnam_lookup = nil,
                   protect = nil,
                   sms = nil)
      @telephone_number = telephone_number
      @number_format = number_format
      @rpid_format = rpid_format
      @rewrite_user = rewrite_user
      @call_forward = call_forward
      @cnam_lookup = cnam_lookup
      @protect = protect
      @sms = sms
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      telephone_number = hash['telephoneNumber']
      number_format = hash['numberFormat']
      rpid_format = hash['rpidFormat']
      rewrite_user = hash['rewriteUser']
      call_forward = hash['callForward']
      cnam_lookup = hash['cnamLookup']
      protect = hash['protect']
      sms = hash['sms']

      # Create object from extracted values.
      LineOption.new(telephone_number,
                     number_format,
                     rpid_format,
                     rewrite_user,
                     call_forward,
                     cnam_lookup,
                     protect,
                     sms)
    end

    def self.from_element(root)
      telephone_number = XmlUtilities.from_element(root, 'TelephoneNumber',
                                                   String)
      number_format = XmlUtilities.from_element(root, 'NumberFormat', String)
      rpid_format = XmlUtilities.from_element(root, 'RPIDFormat', String)
      rewrite_user = XmlUtilities.from_element(root, 'RewriteUser', String)
      call_forward = XmlUtilities.from_element(root, 'CallForward', String)
      cnam_lookup = XmlUtilities.from_element(root, 'CallingNameDisplay',
                                              String)
      protect = XmlUtilities.from_element(root, 'Protected', String)
      sms = XmlUtilities.from_element(root, 'Sms', String)

      new(telephone_number,
          number_format,
          rpid_format,
          rewrite_user,
          call_forward,
          cnam_lookup,
          protect,
          sms)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'TelephoneNumber',
                                     telephone_number)
      XmlUtilities.add_as_subelement(doc, root, 'NumberFormat', number_format)
      XmlUtilities.add_as_subelement(doc, root, 'RPIDFormat', rpid_format)
      XmlUtilities.add_as_subelement(doc, root, 'RewriteUser', rewrite_user)
      XmlUtilities.add_as_subelement(doc, root, 'CallForward', call_forward)
      XmlUtilities.add_as_subelement(doc, root, 'CallingNameDisplay',
                                     cnam_lookup)
      XmlUtilities.add_as_subelement(doc, root, 'Protected', protect)
      XmlUtilities.add_as_subelement(doc, root, 'Sms', sms)

      root
    end
  end
end
