# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SipSigPort Model.
  class SipSigPort < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :index

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :port_number

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['index'] = 'index'
      @_hash['port_number'] = 'portNumber'
      @_hash
    end

    def initialize(index = nil,
                   port_number = nil)
      @index = index
      @port_number = port_number
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      index = hash['index']
      port_number = hash['portNumber']

      # Create object from extracted values.
      SipSigPort.new(index,
                     port_number)
    end

    def self.from_element(root)
      index = XmlUtilities.from_element(root, 'Index', Integer)
      port_number = XmlUtilities.from_element(root, 'PortNumber', Integer)

      new(index,
          port_number)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'Index', index)
      XmlUtilities.add_as_subelement(doc, root, 'PortNumber', port_number)

      root
    end
  end
end
