# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # AccountSitesHosts Model.
  class AccountSitesHosts < BaseModel
    # TODO: Write general description for this method
    # @return [List of SiteHost]
    attr_accessor :site_hosts

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['site_hosts'] = 'siteHosts'
      @_hash
    end

    def initialize(site_hosts = nil)
      @site_hosts = site_hosts
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      site_hosts = nil
      unless hash['siteHosts'].nil?
        site_hosts = []
        hash['siteHosts'].each do |structure|
          site_hosts << (SiteHost.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      AccountSitesHosts.new(site_hosts)
    end

    def self.from_element(root)
      site_hosts = XmlUtilities.from_element_to_array(root, 'SiteHost',
                                                      SiteHost)

      new(site_hosts)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_array_as_subelement(doc, root, 'SiteHost', site_hosts)

      root
    end
  end
end
