# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # MmsMM4Protocol Model.
  class MmsMM4Protocol < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :tls

    # TODO: Write general description for this method
    # @return [MmsMM4TermHosts]
    attr_accessor :term_hosts

    # TODO: Write general description for this method
    # @return [MmsMM4OrigHosts]
    attr_accessor :orig_hosts

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['tls'] = 'tls'
      @_hash['term_hosts'] = 'termHosts'
      @_hash['orig_hosts'] = 'origHosts'
      @_hash
    end

    def initialize(tls = nil,
                   term_hosts = nil,
                   orig_hosts = nil)
      @tls = tls
      @term_hosts = term_hosts
      @orig_hosts = orig_hosts
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      tls = hash['tls']
      term_hosts = MmsMM4TermHosts.from_hash(hash['termHosts']) if
        hash['termHosts']
      orig_hosts = MmsMM4OrigHosts.from_hash(hash['origHosts']) if
        hash['origHosts']

      # Create object from extracted values.
      MmsMM4Protocol.new(tls,
                         term_hosts,
                         orig_hosts)
    end

    def self.from_element(root)
      tls = XmlUtilities.from_element(root, 'Tls', String)
      term_hosts = XmlUtilities.from_element(root, 'MmsMM4TermHosts',
                                             MmsMM4TermHosts)
      orig_hosts = XmlUtilities.from_element(root, 'MmsMM4OrigHosts',
                                             MmsMM4OrigHosts)

      new(tls,
          term_hosts,
          orig_hosts)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'Tls', tls)
      XmlUtilities.add_as_subelement(doc, root, 'MmsMM4TermHosts', term_hosts)
      XmlUtilities.add_as_subelement(doc, root, 'MmsMM4OrigHosts', orig_hosts)

      root
    end
  end
end
