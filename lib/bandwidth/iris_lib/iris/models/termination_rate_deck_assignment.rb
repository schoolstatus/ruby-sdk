# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Bandwidth
  # TerminationRateDeckAssignment Model.
  class TerminationRateDeckAssignment < BaseModel
    # TODO: Write general description for this method
    # @return [Long]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [Long]
    attr_accessor :term_service_rate_deck_id

    # TODO: Write general description for this method
    # @return [Long]
    attr_accessor :term_service_account_id

    # TODO: Write general description for this method
    # @return [Long]
    attr_accessor :external_profile_id

    # TODO: Write general description for this method
    # @return [Long]
    attr_accessor :external_assignment_id

    # TODO: Write general description for this method
    # @return [Long]
    attr_accessor :billing_account_id

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :increase_date

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :decrease_date

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['term_service_rate_deck_id'] = 'termServiceRateDeckId'
      @_hash['term_service_account_id'] = 'termServiceAccountId'
      @_hash['external_profile_id'] = 'externalProfileId'
      @_hash['external_assignment_id'] = 'externalAssignmentId'
      @_hash['billing_account_id'] = 'billingAccountId'
      @_hash['increase_date'] = 'increaseDate'
      @_hash['decrease_date'] = 'decreaseDate'
      @_hash
    end

    def initialize(id = nil,
                   term_service_rate_deck_id = nil,
                   term_service_account_id = nil,
                   external_profile_id = nil,
                   external_assignment_id = nil,
                   billing_account_id = nil,
                   increase_date = nil,
                   decrease_date = nil)
      @id = id
      @term_service_rate_deck_id = term_service_rate_deck_id
      @term_service_account_id = term_service_account_id
      @external_profile_id = external_profile_id
      @external_assignment_id = external_assignment_id
      @billing_account_id = billing_account_id
      @increase_date = increase_date
      @decrease_date = decrease_date
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash['id']
      term_service_rate_deck_id = hash['termServiceRateDeckId']
      term_service_account_id = hash['termServiceAccountId']
      external_profile_id = hash['externalProfileId']
      external_assignment_id = hash['externalAssignmentId']
      billing_account_id = hash['billingAccountId']
      increase_date = APIHelper.rfc3339(hash['increaseDate']) if
        hash['increaseDate']
      decrease_date = APIHelper.rfc3339(hash['decreaseDate']) if
        hash['decreaseDate']

      # Create object from extracted values.
      TerminationRateDeckAssignment.new(id,
                                        term_service_rate_deck_id,
                                        term_service_account_id,
                                        external_profile_id,
                                        external_assignment_id,
                                        billing_account_id,
                                        increase_date,
                                        decrease_date)
    end

    def self.from_element(root)
      id = XmlUtilities.from_element(root, 'id', Integer)
      term_service_rate_deck_id = XmlUtilities.from_element(
        root, 'termServiceRateDeckId', Integer
      )
      term_service_account_id = XmlUtilities.from_element(
        root, 'termServiceAccountId', Integer
      )
      external_profile_id = XmlUtilities.from_element(root, 'externalProfileId',
                                                      Integer)
      external_assignment_id = XmlUtilities.from_element(root,
                                                         'externalAssignmentId',
                                                         Integer)
      billing_account_id = XmlUtilities.from_element(root, 'billingAccountId',
                                                     Integer)
      increase_date = XmlUtilities.from_element(root, 'increaseDate', String,
                                                datetime_format: 'rfc3339')
      decrease_date = XmlUtilities.from_element(root, 'decreaseDate', String,
                                                datetime_format: 'rfc3339')

      new(id,
          term_service_rate_deck_id,
          term_service_account_id,
          external_profile_id,
          external_assignment_id,
          billing_account_id,
          increase_date,
          decrease_date)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'id', id)
      XmlUtilities.add_as_subelement(doc, root, 'termServiceRateDeckId',
                                     term_service_rate_deck_id)
      XmlUtilities.add_as_subelement(doc, root, 'termServiceAccountId',
                                     term_service_account_id)
      XmlUtilities.add_as_subelement(doc, root, 'externalProfileId',
                                     external_profile_id)
      XmlUtilities.add_as_subelement(doc, root, 'externalAssignmentId',
                                     external_assignment_id)
      XmlUtilities.add_as_subelement(doc, root, 'billingAccountId',
                                     billing_account_id)
      XmlUtilities.add_as_subelement(doc, root, 'increaseDate', increase_date,
                                     datetime_format: 'rfc3339')
      XmlUtilities.add_as_subelement(doc, root, 'decreaseDate', decrease_date,
                                     datetime_format: 'rfc3339')

      root
    end
  end
end
