# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SiteTnTotal Model.
  class SiteTnTotal < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :total_tn_count

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['total_tn_count'] = 'totalTnCount'
      @_hash
    end

    def initialize(total_tn_count = nil)
      @total_tn_count = total_tn_count
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      total_tn_count = hash['totalTnCount']

      # Create object from extracted values.
      SiteTnTotal.new(total_tn_count)
    end

    def self.from_element(root)
      total_tn_count = XmlUtilities.from_element(root, 'TotalCount', Integer)

      new(total_tn_count)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'TotalCount', total_tn_count)

      root
    end
  end
end
