# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # TnOptions Model.
  class TnOptions < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :number_format

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :rpid_format

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :rewrite_user

    # TODO: Write general description for this method
    # @return [TelephoneNumber]
    attr_accessor :call_forward

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :final_destination_uri

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :cnam_lookup

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :port_out_passcode

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['number_format'] = 'numberFormat'
      @_hash['rpid_format'] = 'rpidFormat'
      @_hash['rewrite_user'] = 'rewriteUser'
      @_hash['call_forward'] = 'callForward'
      @_hash['final_destination_uri'] = 'finalDestinationUri'
      @_hash['cnam_lookup'] = 'cnamLookup'
      @_hash['port_out_passcode'] = 'portOutPasscode'
      @_hash
    end

    def initialize(number_format = nil,
                   rpid_format = nil,
                   rewrite_user = nil,
                   call_forward = nil,
                   final_destination_uri = nil,
                   cnam_lookup = nil,
                   port_out_passcode = nil)
      @number_format = number_format
      @rpid_format = rpid_format
      @rewrite_user = rewrite_user
      @call_forward = call_forward
      @final_destination_uri = final_destination_uri
      @cnam_lookup = cnam_lookup
      @port_out_passcode = port_out_passcode
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      number_format = hash['numberFormat']
      rpid_format = hash['rpidFormat']
      rewrite_user = hash['rewriteUser']
      call_forward = TelephoneNumber.from_hash(hash['callForward']) if
        hash['callForward']
      final_destination_uri = hash['finalDestinationUri']
      cnam_lookup = hash['cnamLookup']
      port_out_passcode = hash['portOutPasscode']

      # Create object from extracted values.
      TnOptions.new(number_format,
                    rpid_format,
                    rewrite_user,
                    call_forward,
                    final_destination_uri,
                    cnam_lookup,
                    port_out_passcode)
    end

    def self.from_element(root)
      number_format = XmlUtilities.from_element(root, 'NumberFormat', String)
      rpid_format = XmlUtilities.from_element(root, 'RPIDFormat', String)
      rewrite_user = XmlUtilities.from_element(root, 'RewriteUser', String)
      call_forward = XmlUtilities.from_element(root, 'CallForward',
                                               TelephoneNumber)
      final_destination_uri = XmlUtilities.from_element(root,
                                                        'FinalDestinationURI',
                                                        String)
      cnam_lookup = XmlUtilities.from_element(root, 'CallingNameDisplay',
                                              String)
      port_out_passcode = XmlUtilities.from_element(root, 'PortOutPasscode',
                                                    String)

      new(number_format,
          rpid_format,
          rewrite_user,
          call_forward,
          final_destination_uri,
          cnam_lookup,
          port_out_passcode)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'NumberFormat', number_format)
      XmlUtilities.add_as_subelement(doc, root, 'RPIDFormat', rpid_format)
      XmlUtilities.add_as_subelement(doc, root, 'RewriteUser', rewrite_user)
      XmlUtilities.add_as_subelement(doc, root, 'CallForward', call_forward)
      XmlUtilities.add_as_subelement(doc, root, 'FinalDestinationURI',
                                     final_destination_uri)
      XmlUtilities.add_as_subelement(doc, root, 'CallingNameDisplay',
                                     cnam_lookup)
      XmlUtilities.add_as_subelement(doc, root, 'PortOutPasscode',
                                     port_out_passcode)

      root
    end
  end
end
