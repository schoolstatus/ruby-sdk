# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # LdapPermission Model.
  class LdapPermission < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :permission_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :description

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :internal

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['permission_id'] = 'permissionId'
      @_hash['description'] = 'description'
      @_hash['internal'] = 'internal'
      @_hash
    end

    def initialize(permission_id = nil,
                   description = nil,
                   internal = nil)
      @permission_id = permission_id
      @description = description
      @internal = internal
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      permission_id = hash['permissionId']
      description = hash['description']
      internal = hash['internal']

      # Create object from extracted values.
      LdapPermission.new(permission_id,
                         description,
                         internal)
    end

    def self.from_element(root)
      permission_id = XmlUtilities.from_element(root, 'PermissionId', String)
      description = XmlUtilities.from_element(root, 'PermissionDescription',
                                              String)
      internal = XmlUtilities.from_element(root, 'Internal', TrueClass)

      new(permission_id,
          description,
          internal)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'PermissionId', permission_id)
      XmlUtilities.add_as_subelement(doc, root, 'PermissionDescription',
                                     description)
      XmlUtilities.add_as_subelement(doc, root, 'Internal', internal)

      root
    end
  end
end
