# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SipPeerEdgeManagementProduct Model.
  class SipPeerEdgeManagementProduct < BaseModel
    # TODO: Write general description for this method
    # @return [SbcConfigurationPayload]
    attr_accessor :sbc_configuration

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['sbc_configuration'] = 'sbcConfiguration'
      @_hash
    end

    def initialize(sbc_configuration = nil)
      @sbc_configuration = sbc_configuration
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      if hash['sbcConfiguration']
        sbc_configuration = SbcConfigurationPayload.from_hash(hash['sbcConfiguration'])
      end

      # Create object from extracted values.
      SipPeerEdgeManagementProduct.new(sbc_configuration)
    end

    def self.from_element(root)
      sbc_configuration = XmlUtilities.from_element(root,
                                                    'EdgeManagementSettings',
                                                    SbcConfigurationPayload)

      new(sbc_configuration)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'EdgeManagementSettings',
                                     sbc_configuration)

      root
    end
  end
end
