# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # EepToEngAssociationsPayload Model.
  class EepToEngAssociationsPayload < BaseModel
    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :tn_list

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :aeui_list

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['tn_list'] = 'tnList'
      @_hash['aeui_list'] = 'aeuiList'
      @_hash
    end

    def initialize(tn_list = nil,
                   aeui_list = nil)
      @tn_list = tn_list
      @aeui_list = aeui_list
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      tn_list = hash['tnList']
      aeui_list = hash['aeuiList']

      # Create object from extracted values.
      EepToEngAssociationsPayload.new(tn_list,
                                      aeui_list)
    end

    def self.from_element(root)
      tn_list = XmlUtilities.from_element_to_array(
        root, 'TelephoneNumber', String,
        wrapping_element_name: 'EepTns'
      )
      aeui_list = XmlUtilities.from_element_to_array(
        root, 'Identifier', String,
        wrapping_element_name: 'EepAeuiIds'
      )

      new(tn_list,
          aeui_list)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_array_as_subelement(doc, root, 'TelephoneNumber',
                                           tn_list,
                                           wrapping_element_name: 'EepTns')
      XmlUtilities.add_array_as_subelement(doc, root, 'Identifier', aeui_list,
                                           wrapping_element_name: 'EepAeuiIds')

      root
    end
  end
end
