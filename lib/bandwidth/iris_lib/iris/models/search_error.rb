# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SearchError Model.
  class SearchError < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :error_description

    # TODO: Write general description for this method
    # @return [IrisStatusType]
    attr_accessor :error_type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['code'] = 'code'
      @_hash['error_description'] = 'errorDescription'
      @_hash['error_type'] = 'errorType'
      @_hash
    end

    def initialize(code = nil,
                   error_description = nil,
                   error_type = nil)
      @code = code
      @error_description = error_description
      @error_type = error_type
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      code = hash['code']
      error_description = hash['errorDescription']
      error_type = IrisStatusType.from_hash(hash['errorType']) if
        hash['errorType']

      # Create object from extracted values.
      SearchError.new(code,
                      error_description,
                      error_type)
    end

    def self.from_element(root)
      code = XmlUtilities.from_element(root, 'Code', Integer)
      error_description = XmlUtilities.from_element(root, 'Description', String)
      error_type = XmlUtilities.from_element(root, 'IrisStatusType',
                                             IrisStatusType)

      new(code,
          error_description,
          error_type)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'Code', code)
      XmlUtilities.add_as_subelement(doc, root, 'Description',
                                     error_description)
      XmlUtilities.add_as_subelement(doc, root, 'IrisStatusType', error_type)

      root
    end
  end
end
