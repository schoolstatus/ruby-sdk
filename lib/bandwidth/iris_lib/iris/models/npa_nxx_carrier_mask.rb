# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # NpaNxxCarrierMask Model.
  class NpaNxxCarrierMask < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :npa_nxx

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :carrier_mask

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['npa_nxx'] = 'npaNxx'
      @_hash['carrier_mask'] = 'carrierMask'
      @_hash
    end

    def initialize(npa_nxx = nil,
                   carrier_mask = nil)
      @npa_nxx = npa_nxx
      @carrier_mask = carrier_mask
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      npa_nxx = hash['npaNxx']
      carrier_mask = hash['carrierMask']

      # Create object from extracted values.
      NpaNxxCarrierMask.new(npa_nxx,
                            carrier_mask)
    end

    def self.from_element(root)
      npa_nxx = XmlUtilities.from_element(root, 'npaNxx', String)
      carrier_mask = XmlUtilities.from_element(root, 'carrierMask', String)

      new(npa_nxx,
          carrier_mask)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'npaNxx', npa_nxx)
      XmlUtilities.add_as_subelement(doc, root, 'carrierMask', carrier_mask)

      root
    end
  end
end
