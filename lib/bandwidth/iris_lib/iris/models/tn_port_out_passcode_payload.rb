# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # TnPortOutPasscodePayload Model.
  class TnPortOutPasscodePayload < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :full_number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :passcode

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['full_number'] = 'fullNumber'
      @_hash['passcode'] = 'passcode'
      @_hash
    end

    def initialize(full_number = nil,
                   passcode = nil)
      @full_number = full_number
      @passcode = passcode
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      full_number = hash['fullNumber']
      passcode = hash['passcode']

      # Create object from extracted values.
      TnPortOutPasscodePayload.new(full_number,
                                   passcode)
    end

    def self.from_element(root)
      full_number = XmlUtilities.from_element(root, 'FullNumber', String)
      passcode = XmlUtilities.from_element(root, 'Passcode', String)

      new(full_number,
          passcode)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'FullNumber', full_number)
      XmlUtilities.add_as_subelement(doc, root, 'Passcode', passcode)

      root
    end
  end
end
