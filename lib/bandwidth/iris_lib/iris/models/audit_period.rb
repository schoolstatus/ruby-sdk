# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # AuditPeriod Model.
  class AuditPeriod < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :start_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :end_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :audit_month

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['start_date'] = 'startDate'
      @_hash['end_date'] = 'endDate'
      @_hash['audit_month'] = 'auditMonth'
      @_hash
    end

    def initialize(start_date = nil,
                   end_date = nil,
                   audit_month = nil)
      @start_date = start_date
      @end_date = end_date
      @audit_month = audit_month
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      start_date = hash['startDate']
      end_date = hash['endDate']
      audit_month = hash['auditMonth']

      # Create object from extracted values.
      AuditPeriod.new(start_date,
                      end_date,
                      audit_month)
    end

    def self.from_element(root)
      start_date = XmlUtilities.from_element(root, 'StartDate', String)
      end_date = XmlUtilities.from_element(root, 'EndDate', String)
      audit_month = XmlUtilities.from_element(root, 'Month', String)

      new(start_date,
          end_date,
          audit_month)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'StartDate', start_date)
      XmlUtilities.add_as_subelement(doc, root, 'EndDate', end_date)
      XmlUtilities.add_as_subelement(doc, root, 'Month', audit_month)

      root
    end
  end
end
