# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # BillingReportsRetrievePayload Model.
  class BillingReportsRetrievePayload < BaseModel
    # TODO: Write general description for this method
    # @return [List of BillingReport]
    attr_accessor :billing_report_list

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['billing_report_list'] = 'billingReportList'
      @_hash
    end

    def initialize(billing_report_list = nil)
      @billing_report_list = billing_report_list
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      billing_report_list = nil
      unless hash['billingReportList'].nil?
        billing_report_list = []
        hash['billingReportList'].each do |structure|
          billing_report_list << (BillingReport.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      BillingReportsRetrievePayload.new(billing_report_list)
    end

    def self.from_element(root)
      billing_report_list = XmlUtilities.from_element_to_array(root,
                                                               'BillingReport',
                                                               BillingReport)

      new(billing_report_list)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_array_as_subelement(doc, root, 'BillingReport',
                                           billing_report_list)

      root
    end
  end
end
