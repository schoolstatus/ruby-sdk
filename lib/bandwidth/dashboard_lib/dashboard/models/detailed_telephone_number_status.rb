# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # DetailedTelephoneNumberStatus Model.
  class DetailedTelephoneNumberStatus < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :tn

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :tn_status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :user_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :spid

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :alt_spid

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :lrn

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :ocn

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_modified_date_in_utc

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :order_created_date_in_utc

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :error_message

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :account_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :vendor_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :lnp_losing_carrier_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :order_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :order_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :order_status

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['tn'] = 'tn'
      @_hash['tn_status'] = 'tnStatus'
      @_hash['user_id'] = 'userId'
      @_hash['spid'] = 'spid'
      @_hash['alt_spid'] = 'altSpid'
      @_hash['lrn'] = 'lrn'
      @_hash['ocn'] = 'ocn'
      @_hash['last_modified_date_in_utc'] = 'lastModifiedDateInUtc'
      @_hash['order_created_date_in_utc'] = 'orderCreatedDateInUtc'
      @_hash['error_message'] = 'errorMessage'
      @_hash['account_id'] = 'accountId'
      @_hash['vendor_id'] = 'vendorId'
      @_hash['lnp_losing_carrier_name'] = 'lnpLosingCarrierName'
      @_hash['order_id'] = 'orderId'
      @_hash['order_type'] = 'orderType'
      @_hash['order_status'] = 'orderStatus'
      @_hash
    end

    def initialize(tn = nil,
                   tn_status = nil,
                   user_id = nil,
                   spid = nil,
                   alt_spid = nil,
                   lrn = nil,
                   ocn = nil,
                   last_modified_date_in_utc = nil,
                   order_created_date_in_utc = nil,
                   error_message = nil,
                   account_id = nil,
                   vendor_id = nil,
                   lnp_losing_carrier_name = nil,
                   order_id = nil,
                   order_type = nil,
                   order_status = nil)
      @tn = tn
      @tn_status = tn_status
      @user_id = user_id
      @spid = spid
      @alt_spid = alt_spid
      @lrn = lrn
      @ocn = ocn
      @last_modified_date_in_utc = last_modified_date_in_utc
      @order_created_date_in_utc = order_created_date_in_utc
      @error_message = error_message
      @account_id = account_id
      @vendor_id = vendor_id
      @lnp_losing_carrier_name = lnp_losing_carrier_name
      @order_id = order_id
      @order_type = order_type
      @order_status = order_status
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      tn = hash['tn']
      tn_status = hash['tnStatus']
      user_id = hash['userId']
      spid = hash['spid']
      alt_spid = hash['altSpid']
      lrn = hash['lrn']
      ocn = hash['ocn']
      last_modified_date_in_utc = hash['lastModifiedDateInUtc']
      order_created_date_in_utc = hash['orderCreatedDateInUtc']
      error_message = hash['errorMessage']
      account_id = hash['accountId']
      vendor_id = hash['vendorId']
      lnp_losing_carrier_name = hash['lnpLosingCarrierName']
      order_id = hash['orderId']
      order_type = hash['orderType']
      order_status = hash['orderStatus']

      # Create object from extracted values.
      DetailedTelephoneNumberStatus.new(tn,
                                        tn_status,
                                        user_id,
                                        spid,
                                        alt_spid,
                                        lrn,
                                        ocn,
                                        last_modified_date_in_utc,
                                        order_created_date_in_utc,
                                        error_message,
                                        account_id,
                                        vendor_id,
                                        lnp_losing_carrier_name,
                                        order_id,
                                        order_type,
                                        order_status)
    end

    def self.from_element(root)
      tn = XmlUtilities.from_element(root, 'tn', String)
      tn_status = XmlUtilities.from_element(root, 'Status', String)
      user_id = XmlUtilities.from_element(root, 'UserId', String)
      spid = XmlUtilities.from_element(root, 'Spid', String)
      alt_spid = XmlUtilities.from_element(root, 'AltSpid', String)
      lrn = XmlUtilities.from_element(root, 'Lrn', String)
      ocn = XmlUtilities.from_element(root, 'Ocn', String)
      last_modified_date_in_utc = XmlUtilities.from_element(root,
                                                            'LastModifiedDate',
                                                            String)
      order_created_date_in_utc = XmlUtilities.from_element(root,
                                                            'OrderCreateDate',
                                                            String)
      error_message = XmlUtilities.from_element(root, 'ErrorMessage', String)
      account_id = XmlUtilities.from_element(root, 'AccountId', Integer)
      vendor_id = XmlUtilities.from_element(root, 'VendorId', String)
      lnp_losing_carrier_name = XmlUtilities.from_element(
        root, 'LNPLosingCarrierName', String
      )
      order_id = XmlUtilities.from_element(root, 'OrderId', String)
      order_type = XmlUtilities.from_element(root, 'OrderType', String)
      order_status = XmlUtilities.from_element(root, 'OrderStatus', String)

      new(tn,
          tn_status,
          user_id,
          spid,
          alt_spid,
          lrn,
          ocn,
          last_modified_date_in_utc,
          order_created_date_in_utc,
          error_message,
          account_id,
          vendor_id,
          lnp_losing_carrier_name,
          order_id,
          order_type,
          order_status)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'tn', tn)
      XmlUtilities.add_as_subelement(doc, root, 'Status', tn_status)
      XmlUtilities.add_as_subelement(doc, root, 'UserId', user_id)
      XmlUtilities.add_as_subelement(doc, root, 'Spid', spid)
      XmlUtilities.add_as_subelement(doc, root, 'AltSpid', alt_spid)
      XmlUtilities.add_as_subelement(doc, root, 'Lrn', lrn)
      XmlUtilities.add_as_subelement(doc, root, 'Ocn', ocn)
      XmlUtilities.add_as_subelement(doc, root, 'LastModifiedDate',
                                     last_modified_date_in_utc)
      XmlUtilities.add_as_subelement(doc, root, 'OrderCreateDate',
                                     order_created_date_in_utc)
      XmlUtilities.add_as_subelement(doc, root, 'ErrorMessage', error_message)
      XmlUtilities.add_as_subelement(doc, root, 'AccountId', account_id)
      XmlUtilities.add_as_subelement(doc, root, 'VendorId', vendor_id)
      XmlUtilities.add_as_subelement(doc, root, 'LNPLosingCarrierName',
                                     lnp_losing_carrier_name)
      XmlUtilities.add_as_subelement(doc, root, 'OrderId', order_id)
      XmlUtilities.add_as_subelement(doc, root, 'OrderType', order_type)
      XmlUtilities.add_as_subelement(doc, root, 'OrderStatus', order_status)

      root
    end
  end
end
