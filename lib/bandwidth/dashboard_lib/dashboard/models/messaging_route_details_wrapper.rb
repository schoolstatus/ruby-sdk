# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # MessagingRouteDetailsWrapper Model.
  class MessagingRouteDetailsWrapper < BaseModel
    # TODO: Write general description for this method
    # @return [NnRoute]
    attr_accessor :nn_route

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['nn_route'] = 'nnRoute'
      @_hash
    end

    def initialize(nn_route = nil)
      @nn_route = nn_route
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      nn_route = NnRoute.from_hash(hash['nnRoute']) if hash['nnRoute']

      # Create object from extracted values.
      MessagingRouteDetailsWrapper.new(nn_route)
    end

    def self.from_element(root)
      nn_route = XmlUtilities.from_element(root, 'NNRoute', NnRoute)

      new(nn_route)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'NNRoute', nn_route)

      root
    end
  end
end
