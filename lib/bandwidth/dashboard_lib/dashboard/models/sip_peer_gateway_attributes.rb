# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SipPeerGatewayAttributes Model.
  class SipPeerGatewayAttributes < BaseModel
    # TODO: Write general description for this method
    # @return [Long]
    attr_accessor :gateway_id

    # TODO: Write general description for this method
    # @return [List of TerminationAttribute]
    attr_accessor :attributes

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['gateway_id'] = 'gatewayId'
      @_hash['attributes'] = 'attributes'
      @_hash
    end

    def initialize(gateway_id = nil,
                   attributes = nil)
      @gateway_id = gateway_id
      @attributes = attributes
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      gateway_id = hash['gatewayId']
      # Parameter is an array, so we need to iterate through it
      attributes = nil
      unless hash['attributes'].nil?
        attributes = []
        hash['attributes'].each do |structure|
          attributes << (TerminationAttribute.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      SipPeerGatewayAttributes.new(gateway_id,
                                   attributes)
    end

    def self.from_element(root)
      gateway_id = XmlUtilities.from_element(root, 'GatewayId', Integer)
      attributes = XmlUtilities.from_element_to_array(
        root, 'TerminationAttribute', TerminationAttribute,
        wrapping_element_name: 'GatewayAttributes'
      )

      new(gateway_id,
          attributes)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'GatewayId', gateway_id)
      XmlUtilities.add_array_as_subelement(
        doc, root, 'TerminationAttribute', attributes,
        wrapping_element_name: 'GatewayAttributes'
      )

      root
    end
  end
end
