# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # LnpResponseWrapper Model.
  class LnpResponseWrapper < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :account_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :order_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_modified_by

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_modified_date

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :count_of_t_ns

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :bandwidth_prime

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :activity_state

    # TODO: Write general description for this method
    # @return [Note]
    attr_accessor :last_modified_note

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :supp_count

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :order_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :customer_order_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :order_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :billing_telephone_number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :new_billing_telephone_number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :vendor_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :error_message

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :error_code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :requested_foc_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :actual_foc_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :processing_status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :vendor_order

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :vendor_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :lnp_losing_carrier_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :lnp_losing_carrier_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :full_number

    # TODO: Write general description for this method
    # @return [List of LnpError]
    attr_accessor :lnp_errors

    # TODO: Write general description for this method
    # @return [TelephoneNumberDetailsWrapper]
    attr_accessor :telephone_number_details

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :company_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :bulk_portin_order_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_id'] = 'accountId'
      @_hash['order_id'] = 'orderId'
      @_hash['last_modified_by'] = 'lastModifiedBy'
      @_hash['last_modified_date'] = 'lastModifiedDate'
      @_hash['count_of_t_ns'] = 'countOfTNs'
      @_hash['bandwidth_prime'] = 'bandwidthPrime'
      @_hash['activity_state'] = 'activityState'
      @_hash['last_modified_note'] = 'lastModifiedNote'
      @_hash['supp_count'] = 'suppCount'
      @_hash['order_type'] = 'orderType'
      @_hash['customer_order_id'] = 'customerOrderId'
      @_hash['order_date'] = 'orderDate'
      @_hash['billing_telephone_number'] = 'billingTelephoneNumber'
      @_hash['new_billing_telephone_number'] = 'newBillingTelephoneNumber'
      @_hash['vendor_id'] = 'vendorId'
      @_hash['error_message'] = 'errorMessage'
      @_hash['error_code'] = 'errorCode'
      @_hash['requested_foc_date'] = 'requestedFocDate'
      @_hash['actual_foc_date'] = 'actualFocDate'
      @_hash['processing_status'] = 'processingStatus'
      @_hash['vendor_order'] = 'vendorOrder'
      @_hash['vendor_name'] = 'vendorName'
      @_hash['lnp_losing_carrier_id'] = 'lnpLosingCarrierId'
      @_hash['lnp_losing_carrier_name'] = 'lnpLosingCarrierName'
      @_hash['full_number'] = 'fullNumber'
      @_hash['lnp_errors'] = 'lnpErrors'
      @_hash['telephone_number_details'] = 'telephoneNumberDetails'
      @_hash['company_name'] = 'companyName'
      @_hash['bulk_portin_order_id'] = 'bulkPortinOrderId'
      @_hash
    end

    def initialize(account_id = nil,
                   order_id = nil,
                   last_modified_by = nil,
                   last_modified_date = nil,
                   count_of_t_ns = nil,
                   bandwidth_prime = nil,
                   activity_state = nil,
                   last_modified_note = nil,
                   supp_count = nil,
                   order_type = nil,
                   customer_order_id = nil,
                   order_date = nil,
                   billing_telephone_number = nil,
                   new_billing_telephone_number = nil,
                   vendor_id = nil,
                   error_message = nil,
                   error_code = nil,
                   requested_foc_date = nil,
                   actual_foc_date = nil,
                   processing_status = nil,
                   vendor_order = nil,
                   vendor_name = nil,
                   lnp_losing_carrier_id = nil,
                   lnp_losing_carrier_name = nil,
                   full_number = nil,
                   lnp_errors = nil,
                   telephone_number_details = nil,
                   company_name = nil,
                   bulk_portin_order_id = nil)
      @account_id = account_id
      @order_id = order_id
      @last_modified_by = last_modified_by
      @last_modified_date = last_modified_date
      @count_of_t_ns = count_of_t_ns
      @bandwidth_prime = bandwidth_prime
      @activity_state = activity_state
      @last_modified_note = last_modified_note
      @supp_count = supp_count
      @order_type = order_type
      @customer_order_id = customer_order_id
      @order_date = order_date
      @billing_telephone_number = billing_telephone_number
      @new_billing_telephone_number = new_billing_telephone_number
      @vendor_id = vendor_id
      @error_message = error_message
      @error_code = error_code
      @requested_foc_date = requested_foc_date
      @actual_foc_date = actual_foc_date
      @processing_status = processing_status
      @vendor_order = vendor_order
      @vendor_name = vendor_name
      @lnp_losing_carrier_id = lnp_losing_carrier_id
      @lnp_losing_carrier_name = lnp_losing_carrier_name
      @full_number = full_number
      @lnp_errors = lnp_errors
      @telephone_number_details = telephone_number_details
      @company_name = company_name
      @bulk_portin_order_id = bulk_portin_order_id
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_id = hash['accountId']
      order_id = hash['orderId']
      last_modified_by = hash['lastModifiedBy']
      last_modified_date = hash['lastModifiedDate']
      count_of_t_ns = hash['countOfTNs']
      bandwidth_prime = hash['bandwidthPrime']
      activity_state = hash['activityState']
      last_modified_note = Note.from_hash(hash['lastModifiedNote']) if
        hash['lastModifiedNote']
      supp_count = hash['suppCount']
      order_type = hash['orderType']
      customer_order_id = hash['customerOrderId']
      order_date = hash['orderDate']
      billing_telephone_number = hash['billingTelephoneNumber']
      new_billing_telephone_number = hash['newBillingTelephoneNumber']
      vendor_id = hash['vendorId']
      error_message = hash['errorMessage']
      error_code = hash['errorCode']
      requested_foc_date = hash['requestedFocDate']
      actual_foc_date = hash['actualFocDate']
      processing_status = hash['processingStatus']
      vendor_order = hash['vendorOrder']
      vendor_name = hash['vendorName']
      lnp_losing_carrier_id = hash['lnpLosingCarrierId']
      lnp_losing_carrier_name = hash['lnpLosingCarrierName']
      full_number = hash['fullNumber']
      # Parameter is an array, so we need to iterate through it
      lnp_errors = nil
      unless hash['lnpErrors'].nil?
        lnp_errors = []
        hash['lnpErrors'].each do |structure|
          lnp_errors << (LnpError.from_hash(structure) if structure)
        end
      end
      if hash['telephoneNumberDetails']
        telephone_number_details = TelephoneNumberDetailsWrapper.from_hash(hash['telephoneNumberDetails'])
      end
      company_name = hash['companyName']
      bulk_portin_order_id = hash['bulkPortinOrderId']

      # Create object from extracted values.
      LnpResponseWrapper.new(account_id,
                             order_id,
                             last_modified_by,
                             last_modified_date,
                             count_of_t_ns,
                             bandwidth_prime,
                             activity_state,
                             last_modified_note,
                             supp_count,
                             order_type,
                             customer_order_id,
                             order_date,
                             billing_telephone_number,
                             new_billing_telephone_number,
                             vendor_id,
                             error_message,
                             error_code,
                             requested_foc_date,
                             actual_foc_date,
                             processing_status,
                             vendor_order,
                             vendor_name,
                             lnp_losing_carrier_id,
                             lnp_losing_carrier_name,
                             full_number,
                             lnp_errors,
                             telephone_number_details,
                             company_name,
                             bulk_portin_order_id)
    end

    def self.from_element(root)
      account_id = XmlUtilities.from_element(root, 'accountId', Integer)
      order_id = XmlUtilities.from_element(root, 'OrderId', String)
      last_modified_by = XmlUtilities.from_element(root, 'userId', String)
      last_modified_date = XmlUtilities.from_element(root, 'lastModifiedDate',
                                                     String)
      count_of_t_ns = XmlUtilities.from_element(root, 'CountOfTNs', Integer)
      bandwidth_prime = XmlUtilities.from_element(root, 'BandwidthPrime',
                                                  String)
      activity_state = XmlUtilities.from_element(root, 'ActivityState', String)
      last_modified_note = XmlUtilities.from_element(root, 'LastModifiedNote',
                                                     Note)
      supp_count = XmlUtilities.from_element(root, 'SuppCount', Integer)
      order_type = XmlUtilities.from_element(root, 'OrderType', String)
      customer_order_id = XmlUtilities.from_element(root, 'CustomerOrderId',
                                                    String)
      order_date = XmlUtilities.from_element(root, 'OrderDate', String)
      billing_telephone_number = XmlUtilities.from_element(
        root, 'BillingTelephoneNumber', String
      )
      new_billing_telephone_number = XmlUtilities.from_element(
        root, 'NewBillingTelephoneNumber', String
      )
      vendor_id = XmlUtilities.from_element(root, 'VendorId', String)
      error_message = XmlUtilities.from_element(root, 'ErrorMessage', String)
      error_code = XmlUtilities.from_element(root, 'ErrorCode', Integer)
      requested_foc_date = XmlUtilities.from_element(root, 'RequestedFOCDate',
                                                     String)
      actual_foc_date = XmlUtilities.from_element(root, 'ActualFOCDate', String)
      processing_status = XmlUtilities.from_element(root, 'ProcessingStatus',
                                                    String)
      vendor_order = XmlUtilities.from_element(root, 'PON', String)
      vendor_name = XmlUtilities.from_element(root, 'VendorName', String)
      lnp_losing_carrier_id = XmlUtilities.from_element(root,
                                                        'LNPLosingCarrierId',
                                                        String)
      lnp_losing_carrier_name = XmlUtilities.from_element(
        root, 'LNPLosingCarrierName', String
      )
      full_number = XmlUtilities.from_element(root, 'FullNumber', String)
      lnp_errors = XmlUtilities.from_element_to_array(
        root, 'LnpError', LnpError, wrapping_element_name: 'Errors'
      )
      telephone_number_details = XmlUtilities.from_element(
        root, 'TelephoneNumberDetails', TelephoneNumberDetailsWrapper
      )
      company_name = XmlUtilities.from_element(root, 'CompanyName', String)
      bulk_portin_order_id = XmlUtilities.from_element(root,
                                                       'BulkPortinOrderId',
                                                       String)

      new(account_id,
          order_id,
          last_modified_by,
          last_modified_date,
          count_of_t_ns,
          bandwidth_prime,
          activity_state,
          last_modified_note,
          supp_count,
          order_type,
          customer_order_id,
          order_date,
          billing_telephone_number,
          new_billing_telephone_number,
          vendor_id,
          error_message,
          error_code,
          requested_foc_date,
          actual_foc_date,
          processing_status,
          vendor_order,
          vendor_name,
          lnp_losing_carrier_id,
          lnp_losing_carrier_name,
          full_number,
          lnp_errors,
          telephone_number_details,
          company_name,
          bulk_portin_order_id)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'accountId', account_id)
      XmlUtilities.add_as_subelement(doc, root, 'OrderId', order_id)
      XmlUtilities.add_as_subelement(doc, root, 'userId', last_modified_by)
      XmlUtilities.add_as_subelement(doc, root, 'lastModifiedDate',
                                     last_modified_date)
      XmlUtilities.add_as_subelement(doc, root, 'CountOfTNs', count_of_t_ns)
      XmlUtilities.add_as_subelement(doc, root, 'BandwidthPrime',
                                     bandwidth_prime)
      XmlUtilities.add_as_subelement(doc, root, 'ActivityState', activity_state)
      XmlUtilities.add_as_subelement(doc, root, 'LastModifiedNote',
                                     last_modified_note)
      XmlUtilities.add_as_subelement(doc, root, 'SuppCount', supp_count)
      XmlUtilities.add_as_subelement(doc, root, 'OrderType', order_type)
      XmlUtilities.add_as_subelement(doc, root, 'CustomerOrderId',
                                     customer_order_id)
      XmlUtilities.add_as_subelement(doc, root, 'OrderDate', order_date)
      XmlUtilities.add_as_subelement(doc, root, 'BillingTelephoneNumber',
                                     billing_telephone_number)
      XmlUtilities.add_as_subelement(doc, root, 'NewBillingTelephoneNumber',
                                     new_billing_telephone_number)
      XmlUtilities.add_as_subelement(doc, root, 'VendorId', vendor_id)
      XmlUtilities.add_as_subelement(doc, root, 'ErrorMessage', error_message)
      XmlUtilities.add_as_subelement(doc, root, 'ErrorCode', error_code)
      XmlUtilities.add_as_subelement(doc, root, 'RequestedFOCDate',
                                     requested_foc_date)
      XmlUtilities.add_as_subelement(doc, root, 'ActualFOCDate',
                                     actual_foc_date)
      XmlUtilities.add_as_subelement(doc, root, 'ProcessingStatus',
                                     processing_status)
      XmlUtilities.add_as_subelement(doc, root, 'PON', vendor_order)
      XmlUtilities.add_as_subelement(doc, root, 'VendorName', vendor_name)
      XmlUtilities.add_as_subelement(doc, root, 'LNPLosingCarrierId',
                                     lnp_losing_carrier_id)
      XmlUtilities.add_as_subelement(doc, root, 'LNPLosingCarrierName',
                                     lnp_losing_carrier_name)
      XmlUtilities.add_as_subelement(doc, root, 'FullNumber', full_number)
      XmlUtilities.add_array_as_subelement(doc, root, 'LnpError', lnp_errors,
                                           wrapping_element_name: 'Errors')
      XmlUtilities.add_as_subelement(doc, root, 'TelephoneNumberDetails',
                                     telephone_number_details)
      XmlUtilities.add_as_subelement(doc, root, 'CompanyName', company_name)
      XmlUtilities.add_as_subelement(doc, root, 'BulkPortinOrderId',
                                     bulk_portin_order_id)

      root
    end
  end
end
