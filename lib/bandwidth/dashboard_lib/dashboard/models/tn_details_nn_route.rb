# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # TnDetailsNnRoute Model.
  class TnDetailsNnRoute < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :nn_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['nn_id'] = 'nnId'
      @_hash['name'] = 'name'
      @_hash
    end

    def initialize(nn_id = nil,
                   name = nil)
      @nn_id = nn_id
      @name = name
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      nn_id = hash['nnId']
      name = hash['name']

      # Create object from extracted values.
      TnDetailsNnRoute.new(nn_id,
                           name)
    end

    def self.from_element(root)
      nn_id = XmlUtilities.from_element(root, 'Nnid', Integer)
      name = XmlUtilities.from_element(root, 'Name', String)

      new(nn_id,
          name)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'Nnid', nn_id)
      XmlUtilities.add_as_subelement(doc, root, 'Name', name)

      root
    end
  end
end
