# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # CallbackCreds Model.
  class CallbackCreds < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :user_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :password

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['user_id'] = 'userId'
      @_hash['password'] = 'password'
      @_hash
    end

    def initialize(user_id = nil,
                   password = nil)
      @user_id = user_id
      @password = password
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      user_id = hash['userId']
      password = hash['password']

      # Create object from extracted values.
      CallbackCreds.new(user_id,
                        password)
    end

    def self.from_element(root)
      user_id = XmlUtilities.from_element(root, 'UserId', String)
      password = XmlUtilities.from_element(root, 'Password', String)

      new(user_id,
          password)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'UserId', user_id)
      XmlUtilities.add_as_subelement(doc, root, 'Password', password)

      root
    end
  end
end
