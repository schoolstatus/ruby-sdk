# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # AccountHttpFeature Model.
  class AccountHttpFeature < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :default_proxy_peer_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['default_proxy_peer_id'] = 'defaultProxyPeerId'
      @_hash
    end

    def initialize(default_proxy_peer_id = nil)
      @default_proxy_peer_id = default_proxy_peer_id
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      default_proxy_peer_id = hash['defaultProxyPeerId']

      # Create object from extracted values.
      AccountHttpFeature.new(default_proxy_peer_id)
    end

    def self.from_element(root)
      default_proxy_peer_id = XmlUtilities.from_element(root,
                                                        'DefaultProxyPeerId',
                                                        Integer)

      new(default_proxy_peer_id)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'DefaultProxyPeerId',
                                     default_proxy_peer_id)

      root
    end
  end
end
