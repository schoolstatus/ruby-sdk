# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SipPeerTelephoneNumberBulk Model.
  class SipPeerTelephoneNumberBulk < BaseModel
    # TODO: Write general description for this method
    # @return [TelephoneNumbers2]
    attr_accessor :telephone_numbers

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['telephone_numbers'] = 'telephoneNumbers'
      @_hash
    end

    def initialize(telephone_numbers = nil)
      @telephone_numbers = telephone_numbers
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      if hash['telephoneNumbers']
        telephone_numbers = TelephoneNumbers2.from_hash(hash['telephoneNumbers'])
      end

      # Create object from extracted values.
      SipPeerTelephoneNumberBulk.new(telephone_numbers)
    end

    def self.from_element(root)
      telephone_numbers = XmlUtilities.from_element(root, 'FullNumber',
                                                    TelephoneNumbers2)

      new(telephone_numbers)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'FullNumber', telephone_numbers)

      root
    end
  end
end
