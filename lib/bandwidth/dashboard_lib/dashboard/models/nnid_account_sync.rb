# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # NnidAccountSync Model.
  class NnidAccountSync < BaseModel
    # TODO: Write general description for this method
    # @return [List of Integer]
    attr_accessor :account_ids

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_ids'] = 'accountIds'
      @_hash
    end

    def initialize(account_ids = nil)
      @account_ids = account_ids
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_ids = hash['accountIds']

      # Create object from extracted values.
      NnidAccountSync.new(account_ids)
    end

    def self.from_element(root)
      account_ids = XmlUtilities.from_element_to_array(
        root, 'AccountId', Integer,
        wrapping_element_name: 'AccountIds'
      )

      new(account_ids)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_array_as_subelement(doc, root, 'AccountId', account_ids,
                                           wrapping_element_name: 'AccountIds')

      root
    end
  end
end
