# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # FileMetaDataPayload Model.
  class FileMetaDataPayload < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :document_name

    # TODO: Write general description for this method
    # @return [DocumentTypeEnum]
    attr_accessor :document_type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['document_name'] = 'documentName'
      @_hash['document_type'] = 'documentType'
      @_hash
    end

    def initialize(document_name = nil,
                   document_type = nil)
      @document_name = document_name
      @document_type = document_type
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      document_name = hash['documentName']
      document_type = hash['documentType']

      # Create object from extracted values.
      FileMetaDataPayload.new(document_name,
                              document_type)
    end

    def self.from_element(root)
      document_name = XmlUtilities.from_element(root, 'DocumentName', String)
      document_type = XmlUtilities.from_element(root, 'DocumentType', String)

      new(document_name,
          document_type)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'DocumentName', document_name)
      XmlUtilities.add_as_subelement(doc, root, 'DocumentType', document_type)

      root
    end
  end
end
