# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SipCredentialResponse Model.
  class SipCredentialResponse < BaseModel
    # TODO: Write general description for this method
    # @return [SipCredential]
    attr_accessor :payload

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :account_id

    # TODO: Write general description for this method
    # @return [SipCredentialError]
    attr_accessor :error

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['payload'] = 'payload'
      @_hash['account_id'] = 'accountId'
      @_hash['error'] = 'error'
      @_hash
    end

    def initialize(payload = nil,
                   account_id = nil,
                   error = nil)
      @payload = payload
      @account_id = account_id
      @error = error
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      payload = SipCredential.from_hash(hash['payload']) if hash['payload']
      account_id = hash['accountId']
      error = SipCredentialError.from_hash(hash['error']) if hash['error']

      # Create object from extracted values.
      SipCredentialResponse.new(payload,
                                account_id,
                                error)
    end

    def self.from_element(root)
      payload = XmlUtilities.from_element(root, 'SipCredential', SipCredential)
      account_id = XmlUtilities.from_element(root, 'AccountId', Integer)
      error = XmlUtilities.from_element(root, 'Error', SipCredentialError)

      new(payload,
          account_id,
          error)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'SipCredential', payload)
      XmlUtilities.add_as_subelement(doc, root, 'AccountId', account_id)
      XmlUtilities.add_as_subelement(doc, root, 'Error', error)

      root
    end
  end
end
