# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # BillingSettings Model.
  class BillingSettings < BaseModel
    # TODO: Write general description for this method
    # @return [List of BillingSetting]
    attr_accessor :billing_settings

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['billing_settings'] = 'billingSettings'
      @_hash
    end

    def initialize(billing_settings = nil)
      @billing_settings = billing_settings
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      billing_settings = nil
      unless hash['billingSettings'].nil?
        billing_settings = []
        hash['billingSettings'].each do |structure|
          billing_settings << (BillingSetting.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      BillingSettings.new(billing_settings)
    end

    def self.from_element(root)
      billing_settings = XmlUtilities.from_element_to_array(root,
                                                            'BillingSetting',
                                                            BillingSetting)

      new(billing_settings)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_array_as_subelement(doc, root, 'BillingSetting',
                                           billing_settings)

      root
    end
  end
end
