# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # LsrOrderResponse Model.
  class LsrOrderResponse < BaseModel
    # TODO: Write general description for this method
    # @return [LsrOrderPayload]
    attr_accessor :payload

    # TODO: Write general description for this method
    # @return [List of LsrOrderError]
    attr_accessor :lsr_order_errors

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['payload'] = 'payload'
      @_hash['lsr_order_errors'] = 'lsrOrderErrors'
      @_hash
    end

    def initialize(payload = nil,
                   lsr_order_errors = nil)
      @payload = payload
      @lsr_order_errors = lsr_order_errors
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      payload = LsrOrderPayload.from_hash(hash['payload']) if hash['payload']
      # Parameter is an array, so we need to iterate through it
      lsr_order_errors = nil
      unless hash['lsrOrderErrors'].nil?
        lsr_order_errors = []
        hash['lsrOrderErrors'].each do |structure|
          lsr_order_errors << (LsrOrderError.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      LsrOrderResponse.new(payload,
                           lsr_order_errors)
    end

    def self.from_element(root)
      payload = XmlUtilities.from_element(root, 'LsrOrder', LsrOrderPayload)
      lsr_order_errors = XmlUtilities.from_element_to_array(
        root, 'LsrSubmissionOrderError', LsrOrderError,
        wrapping_element_name: 'LsrOrderErrors'
      )

      new(payload,
          lsr_order_errors)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'LsrOrder', payload)
      XmlUtilities.add_array_as_subelement(
        doc, root, 'LsrSubmissionOrderError', lsr_order_errors,
        wrapping_element_name: 'LsrOrderErrors'
      )

      root
    end
  end
end
