# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # ExistingTelephoneNumberOrderType Model.
  class ExistingTelephoneNumberOrderType < BaseModel
    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :telephone_numbers

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :reservation_ids

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['telephone_numbers'] = 'telephoneNumbers'
      @_hash['reservation_ids'] = 'reservationIds'
      @_hash
    end

    def initialize(telephone_numbers = nil,
                   reservation_ids = nil)
      @telephone_numbers = telephone_numbers
      @reservation_ids = reservation_ids
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      telephone_numbers = hash['telephoneNumbers']
      reservation_ids = hash['reservationIds']

      # Create object from extracted values.
      ExistingTelephoneNumberOrderType.new(telephone_numbers,
                                           reservation_ids)
    end

    def self.from_element(root)
      telephone_numbers = XmlUtilities.from_element_to_array(
        root, 'TelephoneNumber', String,
        wrapping_element_name: 'TelephoneNumberList'
      )
      reservation_ids = XmlUtilities.from_element_to_array(
        root, 'ReservationId', String,
        wrapping_element_name: 'ReservationIdList'
      )

      new(telephone_numbers,
          reservation_ids)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_array_as_subelement(
        doc, root, 'TelephoneNumber', telephone_numbers,
        wrapping_element_name: 'TelephoneNumberList'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'ReservationId', reservation_ids,
        wrapping_element_name: 'ReservationIdList'
      )

      root
    end
  end
end
