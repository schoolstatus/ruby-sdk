# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # AccountMmsFeatureSettings Model.
  class AccountMmsFeatureSettings < BaseModel
    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :mm4_enabled

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :toll_free_mms_allowed

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :default_provider

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :gen_dlr

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :gen_read_reply

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['mm4_enabled'] = 'mm4Enabled'
      @_hash['toll_free_mms_allowed'] = 'tollFreeMMSAllowed'
      @_hash['default_provider'] = 'defaultProvider'
      @_hash['gen_dlr'] = 'genDlr'
      @_hash['gen_read_reply'] = 'genReadReply'
      @_hash
    end

    def initialize(mm4_enabled = nil,
                   toll_free_mms_allowed = nil,
                   default_provider = nil,
                   gen_dlr = nil,
                   gen_read_reply = nil)
      @mm4_enabled = mm4_enabled
      @toll_free_mms_allowed = toll_free_mms_allowed
      @default_provider = default_provider
      @gen_dlr = gen_dlr
      @gen_read_reply = gen_read_reply
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      mm4_enabled = hash['mm4Enabled']
      toll_free_mms_allowed = hash['tollFreeMMSAllowed']
      default_provider = hash['defaultProvider']
      gen_dlr = hash['genDlr']
      gen_read_reply = hash['genReadReply']

      # Create object from extracted values.
      AccountMmsFeatureSettings.new(mm4_enabled,
                                    toll_free_mms_allowed,
                                    default_provider,
                                    gen_dlr,
                                    gen_read_reply)
    end

    def self.from_element(root)
      mm4_enabled = XmlUtilities.from_element(root, 'MM4Enabled', TrueClass)
      toll_free_mms_allowed = XmlUtilities.from_element(root,
                                                        'TollFreeMMSAllowed',
                                                        TrueClass)
      default_provider = XmlUtilities.from_element(root, 'DefaultProvider',
                                                   Integer)
      gen_dlr = XmlUtilities.from_element(root, 'GenDlr', TrueClass)
      gen_read_reply = XmlUtilities.from_element(root, 'GenReadReply',
                                                 TrueClass)

      new(mm4_enabled,
          toll_free_mms_allowed,
          default_provider,
          gen_dlr,
          gen_read_reply)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'MM4Enabled', mm4_enabled)
      XmlUtilities.add_as_subelement(doc, root, 'TollFreeMMSAllowed',
                                     toll_free_mms_allowed)
      XmlUtilities.add_as_subelement(doc, root, 'DefaultProvider',
                                     default_provider)
      XmlUtilities.add_as_subelement(doc, root, 'GenDlr', gen_dlr)
      XmlUtilities.add_as_subelement(doc, root, 'GenReadReply', gen_read_reply)

      root
    end
  end
end
