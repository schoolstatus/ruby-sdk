# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # AdminParametersPayload Model.
  class AdminParametersPayload < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :activity_state

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :bandwidth_prime

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['activity_state'] = 'activityState'
      @_hash['bandwidth_prime'] = 'bandwidthPrime'
      @_hash
    end

    def initialize(activity_state = nil,
                   bandwidth_prime = nil)
      @activity_state = activity_state
      @bandwidth_prime = bandwidth_prime
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      activity_state = hash['activityState']
      bandwidth_prime = hash['bandwidthPrime']

      # Create object from extracted values.
      AdminParametersPayload.new(activity_state,
                                 bandwidth_prime)
    end

    def self.from_element(root)
      activity_state = XmlUtilities.from_element(root, 'ActivityState', String)
      bandwidth_prime = XmlUtilities.from_element(root, 'BandwidthPrime',
                                                  String)

      new(activity_state,
          bandwidth_prime)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'ActivityState', activity_state)
      XmlUtilities.add_as_subelement(doc, root, 'BandwidthPrime',
                                     bandwidth_prime)

      root
    end
  end
end
