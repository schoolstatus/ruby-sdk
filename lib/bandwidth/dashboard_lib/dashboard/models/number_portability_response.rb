# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # NumberPortabilityResponse Model.
  class NumberPortabilityResponse < BaseModel
    # TODO: Write general description for this method
    # @return [PortInTypeEnum]
    attr_accessor :port_in_type

    # TODO: Write general description for this method
    # @return [List of LnpError]
    attr_accessor :errors

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :supported_numbers

    # TODO: Write general description for this method
    # @return [List of LnpError]
    attr_accessor :portability_errors

    # TODO: Write general description for this method
    # @return [List of RateCenterGroup]
    attr_accessor :supported_rate_centers

    # TODO: Write general description for this method
    # @return [List of RateCenterGroup]
    attr_accessor :partner_supported_rate_centers

    # TODO: Write general description for this method
    # @return [List of TollFreeNumberGroup]
    attr_accessor :supported_toll_free_numbers

    # TODO: Write general description for this method
    # @return [List of RateCenterGroup]
    attr_accessor :unsupported_rate_centers

    # TODO: Write general description for this method
    # @return [List of LosingCarrierGroup]
    attr_accessor :supported_losing_carriers

    # TODO: Write general description for this method
    # @return [List of LosingCarrierGroup]
    attr_accessor :un_supported_losing_carriers

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :supported_rate_center_telephone_numbers

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :supported_toll_free_telephone_numbers

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :unsupported_rate_center_telephone_numbers

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :unsupported_losing_carrier_telephone_numbers

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['port_in_type'] = 'portInType'
      @_hash['errors'] = 'errors'
      @_hash['supported_numbers'] = 'supportedNumbers'
      @_hash['portability_errors'] = 'portabilityErrors'
      @_hash['supported_rate_centers'] = 'supportedRateCenters'
      @_hash['partner_supported_rate_centers'] = 'partnerSupportedRateCenters'
      @_hash['supported_toll_free_numbers'] = 'supportedTollFreeNumbers'
      @_hash['unsupported_rate_centers'] = 'unsupportedRateCenters'
      @_hash['supported_losing_carriers'] = 'supportedLosingCarriers'
      @_hash['un_supported_losing_carriers'] = 'unSupportedLosingCarriers'
      @_hash['supported_rate_center_telephone_numbers'] =
        'supportedRateCenterTelephoneNumbers'
      @_hash['supported_toll_free_telephone_numbers'] =
        'supportedTollFreeTelephoneNumbers'
      @_hash['unsupported_rate_center_telephone_numbers'] =
        'unsupportedRateCenterTelephoneNumbers'
      @_hash['unsupported_losing_carrier_telephone_numbers'] =
        'unsupportedLosingCarrierTelephoneNumbers'
      @_hash
    end

    def initialize(port_in_type = nil,
                   errors = nil,
                   supported_numbers = nil,
                   portability_errors = nil,
                   supported_rate_centers = nil,
                   partner_supported_rate_centers = nil,
                   supported_toll_free_numbers = nil,
                   unsupported_rate_centers = nil,
                   supported_losing_carriers = nil,
                   un_supported_losing_carriers = nil,
                   supported_rate_center_telephone_numbers = nil,
                   supported_toll_free_telephone_numbers = nil,
                   unsupported_rate_center_telephone_numbers = nil,
                   unsupported_losing_carrier_telephone_numbers = nil)
      @port_in_type = port_in_type
      @errors = errors
      @supported_numbers = supported_numbers
      @portability_errors = portability_errors
      @supported_rate_centers = supported_rate_centers
      @partner_supported_rate_centers = partner_supported_rate_centers
      @supported_toll_free_numbers = supported_toll_free_numbers
      @unsupported_rate_centers = unsupported_rate_centers
      @supported_losing_carriers = supported_losing_carriers
      @un_supported_losing_carriers = un_supported_losing_carriers
      @supported_rate_center_telephone_numbers =
        supported_rate_center_telephone_numbers
      @supported_toll_free_telephone_numbers =
        supported_toll_free_telephone_numbers
      @unsupported_rate_center_telephone_numbers =
        unsupported_rate_center_telephone_numbers
      @unsupported_losing_carrier_telephone_numbers =
        unsupported_losing_carrier_telephone_numbers
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      port_in_type = hash['portInType']
      # Parameter is an array, so we need to iterate through it
      errors = nil
      unless hash['errors'].nil?
        errors = []
        hash['errors'].each do |structure|
          errors << (LnpError.from_hash(structure) if structure)
        end
      end
      supported_numbers = hash['supportedNumbers']
      # Parameter is an array, so we need to iterate through it
      portability_errors = nil
      unless hash['portabilityErrors'].nil?
        portability_errors = []
        hash['portabilityErrors'].each do |structure|
          portability_errors << (LnpError.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      supported_rate_centers = nil
      unless hash['supportedRateCenters'].nil?
        supported_rate_centers = []
        hash['supportedRateCenters'].each do |structure|
          supported_rate_centers << (RateCenterGroup.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      partner_supported_rate_centers = nil
      unless hash['partnerSupportedRateCenters'].nil?
        partner_supported_rate_centers = []
        hash['partnerSupportedRateCenters'].each do |structure|
          partner_supported_rate_centers << (RateCenterGroup.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      supported_toll_free_numbers = nil
      unless hash['supportedTollFreeNumbers'].nil?
        supported_toll_free_numbers = []
        hash['supportedTollFreeNumbers'].each do |structure|
          supported_toll_free_numbers << (TollFreeNumberGroup.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      unsupported_rate_centers = nil
      unless hash['unsupportedRateCenters'].nil?
        unsupported_rate_centers = []
        hash['unsupportedRateCenters'].each do |structure|
          unsupported_rate_centers << (RateCenterGroup.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      supported_losing_carriers = nil
      unless hash['supportedLosingCarriers'].nil?
        supported_losing_carriers = []
        hash['supportedLosingCarriers'].each do |structure|
          supported_losing_carriers << (LosingCarrierGroup.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      un_supported_losing_carriers = nil
      unless hash['unSupportedLosingCarriers'].nil?
        un_supported_losing_carriers = []
        hash['unSupportedLosingCarriers'].each do |structure|
          un_supported_losing_carriers << (LosingCarrierGroup.from_hash(structure) if structure)
        end
      end
      supported_rate_center_telephone_numbers =
        hash['supportedRateCenterTelephoneNumbers']
      supported_toll_free_telephone_numbers =
        hash['supportedTollFreeTelephoneNumbers']
      unsupported_rate_center_telephone_numbers =
        hash['unsupportedRateCenterTelephoneNumbers']
      unsupported_losing_carrier_telephone_numbers =
        hash['unsupportedLosingCarrierTelephoneNumbers']

      # Create object from extracted values.
      NumberPortabilityResponse.new(port_in_type,
                                    errors,
                                    supported_numbers,
                                    portability_errors,
                                    supported_rate_centers,
                                    partner_supported_rate_centers,
                                    supported_toll_free_numbers,
                                    unsupported_rate_centers,
                                    supported_losing_carriers,
                                    un_supported_losing_carriers,
                                    supported_rate_center_telephone_numbers,
                                    supported_toll_free_telephone_numbers,
                                    unsupported_rate_center_telephone_numbers,
                                    unsupported_losing_carrier_telephone_numbers)
    end

    def self.from_element(root)
      port_in_type = XmlUtilities.from_element(root, 'PortType', String)
      errors = XmlUtilities.from_element_to_array(root, 'Errors', LnpError)
      supported_numbers = XmlUtilities.from_element_to_array(
        root, 'Tn', String, wrapping_element_name: 'PortableNumbers'
      )
      portability_errors = XmlUtilities.from_element_to_array(
        root, 'LnpError', LnpError,
        wrapping_element_name: 'PortabilityErrors'
      )
      supported_rate_centers = XmlUtilities.from_element_to_array(
        root, 'RateCenterGroup', RateCenterGroup,
        wrapping_element_name: 'SupportedRateCenters'
      )
      partner_supported_rate_centers = XmlUtilities.from_element_to_array(
        root, 'RateCenterGroup', RateCenterGroup,
        wrapping_element_name: 'PartnerSupportedRateCenters'
      )
      supported_toll_free_numbers = XmlUtilities.from_element_to_array(
        root, 'TollFreeNumberGroup', TollFreeNumberGroup,
        wrapping_element_name: 'SupportedTollFreeNumbers'
      )
      unsupported_rate_centers = XmlUtilities.from_element_to_array(
        root, 'RateCenterGroup', RateCenterGroup,
        wrapping_element_name: 'UnsupportedRateCenters'
      )
      supported_losing_carriers = XmlUtilities.from_element_to_array(
        root, 'LosingCarrierGroup', LosingCarrierGroup,
        wrapping_element_name: 'SupportedLosingCarriers'
      )
      un_supported_losing_carriers = XmlUtilities.from_element_to_array(
        root, 'LosingCarrierGroup', LosingCarrierGroup,
        wrapping_element_name: 'UnsupportedLosingCarriers'
      )
      supported_rate_center_telephone_numbers = XmlUtilities.from_element_to_array(
        root, 'Tn', String,
        wrapping_element_name: 'SupportedRateCenterTelephoneNumbers'
      )
      supported_toll_free_telephone_numbers = XmlUtilities.from_element_to_array(
        root, 'Tn', String,
        wrapping_element_name: 'SupportedTollFreeTelephoneNumbers'
      )
      unsupported_rate_center_telephone_numbers = XmlUtilities.from_element_to_array(
        root, 'Tn', String,
        wrapping_element_name: 'UnsupportedRateCenterTelephoneNumbers'
      )
      unsupported_losing_carrier_telephone_numbers = XmlUtilities.from_element_to_array(
        root, 'Tn', String,
        wrapping_element_name: 'UnsupportedLosingCarrierTelephoneNumbers'
      )

      new(port_in_type,
          errors,
          supported_numbers,
          portability_errors,
          supported_rate_centers,
          partner_supported_rate_centers,
          supported_toll_free_numbers,
          unsupported_rate_centers,
          supported_losing_carriers,
          un_supported_losing_carriers,
          supported_rate_center_telephone_numbers,
          supported_toll_free_telephone_numbers,
          unsupported_rate_center_telephone_numbers,
          unsupported_losing_carrier_telephone_numbers)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'PortType', port_in_type)
      XmlUtilities.add_array_as_subelement(doc, root, 'Errors', errors)
      XmlUtilities.add_array_as_subelement(
        doc, root, 'Tn', supported_numbers,
        wrapping_element_name: 'PortableNumbers'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'LnpError', portability_errors,
        wrapping_element_name: 'PortabilityErrors'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'RateCenterGroup', supported_rate_centers,
        wrapping_element_name: 'SupportedRateCenters'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'RateCenterGroup', partner_supported_rate_centers,
        wrapping_element_name: 'PartnerSupportedRateCenters'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'TollFreeNumberGroup', supported_toll_free_numbers,
        wrapping_element_name: 'SupportedTollFreeNumbers'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'RateCenterGroup', unsupported_rate_centers,
        wrapping_element_name: 'UnsupportedRateCenters'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'LosingCarrierGroup', supported_losing_carriers,
        wrapping_element_name: 'SupportedLosingCarriers'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'LosingCarrierGroup', un_supported_losing_carriers,
        wrapping_element_name: 'UnsupportedLosingCarriers'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'Tn', supported_rate_center_telephone_numbers,
        wrapping_element_name: 'SupportedRateCenterTelephoneNumbers'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'Tn', supported_toll_free_telephone_numbers,
        wrapping_element_name: 'SupportedTollFreeTelephoneNumbers'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'Tn', unsupported_rate_center_telephone_numbers,
        wrapping_element_name: 'UnsupportedRateCenterTelephoneNumbers'
      )
      XmlUtilities.add_array_as_subelement(
        doc, root, 'Tn', unsupported_losing_carrier_telephone_numbers,
        wrapping_element_name: 'UnsupportedLosingCarrierTelephoneNumbers'
      )

      root
    end
  end
end
