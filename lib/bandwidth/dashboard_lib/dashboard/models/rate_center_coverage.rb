# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # RateCenterCoverage Model.
  class RateCenterCoverage < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :vendor_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :rc_abbreviation

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :rc_state

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :tier_id

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :rc_supports_lnp

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :rc_supports_new_tns

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :lrn

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :rc_lata

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['vendor_id'] = 'vendorId'
      @_hash['rc_abbreviation'] = 'rcAbbreviation'
      @_hash['rc_state'] = 'rcState'
      @_hash['tier_id'] = 'tierId'
      @_hash['rc_supports_lnp'] = 'rcSupportsLnp'
      @_hash['rc_supports_new_tns'] = 'rcSupportsNewTns'
      @_hash['lrn'] = 'lrn'
      @_hash['rc_lata'] = 'rcLata'
      @_hash
    end

    def initialize(vendor_id = nil,
                   rc_abbreviation = nil,
                   rc_state = nil,
                   tier_id = nil,
                   rc_supports_lnp = nil,
                   rc_supports_new_tns = nil,
                   lrn = nil,
                   rc_lata = nil)
      @vendor_id = vendor_id
      @rc_abbreviation = rc_abbreviation
      @rc_state = rc_state
      @tier_id = tier_id
      @rc_supports_lnp = rc_supports_lnp
      @rc_supports_new_tns = rc_supports_new_tns
      @lrn = lrn
      @rc_lata = rc_lata
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      vendor_id = hash['vendorId']
      rc_abbreviation = hash['rcAbbreviation']
      rc_state = hash['rcState']
      tier_id = hash['tierId']
      rc_supports_lnp = hash['rcSupportsLnp']
      rc_supports_new_tns = hash['rcSupportsNewTns']
      lrn = hash['lrn']
      rc_lata = hash['rcLata']

      # Create object from extracted values.
      RateCenterCoverage.new(vendor_id,
                             rc_abbreviation,
                             rc_state,
                             tier_id,
                             rc_supports_lnp,
                             rc_supports_new_tns,
                             lrn,
                             rc_lata)
    end

    def self.from_element(root)
      vendor_id = XmlUtilities.from_element(root, 'VendorId', Integer)
      rc_abbreviation = XmlUtilities.from_element(root, 'Abbreviation', String)
      rc_state = XmlUtilities.from_element(root, 'Region', String)
      tier_id = XmlUtilities.from_element(root, 'TierId', Integer)
      rc_supports_lnp = XmlUtilities.from_element(root, 'SupportsLnp',
                                                  TrueClass)
      rc_supports_new_tns = XmlUtilities.from_element(root, 'SupportsNewTns',
                                                      TrueClass)
      lrn = XmlUtilities.from_element(root, 'Lrn', String)
      rc_lata = XmlUtilities.from_element(root, 'Lata', String)

      new(vendor_id,
          rc_abbreviation,
          rc_state,
          tier_id,
          rc_supports_lnp,
          rc_supports_new_tns,
          lrn,
          rc_lata)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'VendorId', vendor_id)
      XmlUtilities.add_as_subelement(doc, root, 'Abbreviation', rc_abbreviation)
      XmlUtilities.add_as_subelement(doc, root, 'Region', rc_state)
      XmlUtilities.add_as_subelement(doc, root, 'TierId', tier_id)
      XmlUtilities.add_as_subelement(doc, root, 'SupportsLnp', rc_supports_lnp)
      XmlUtilities.add_as_subelement(doc, root, 'SupportsNewTns',
                                     rc_supports_new_tns)
      XmlUtilities.add_as_subelement(doc, root, 'Lrn', lrn)
      XmlUtilities.add_as_subelement(doc, root, 'Lata', rc_lata)

      root
    end
  end
end
