# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # TelephoneNumbersDetailsHistory Model.
  class TelephoneNumbersDetailsHistory < BaseModel
    # TODO: Write general description for this method
    # @return [List of TelephoneNumbersDetail]
    attr_accessor :telephone_numbers_details

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['telephone_numbers_details'] = 'telephoneNumbersDetails'
      @_hash
    end

    def initialize(telephone_numbers_details = nil)
      @telephone_numbers_details = telephone_numbers_details
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      telephone_numbers_details = nil
      unless hash['telephoneNumbersDetails'].nil?
        telephone_numbers_details = []
        hash['telephoneNumbersDetails'].each do |structure|
          telephone_numbers_details << (TelephoneNumbersDetail.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      TelephoneNumbersDetailsHistory.new(telephone_numbers_details)
    end

    def self.from_element(root)
      telephone_numbers_details = XmlUtilities.from_element_to_array(
        root, 'TNs', TelephoneNumbersDetail
      )

      new(telephone_numbers_details)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_array_as_subelement(doc, root, 'TNs',
                                           telephone_numbers_details)

      root
    end
  end
end
