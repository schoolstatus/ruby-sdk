# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # AccountSmsFeature Model.
  class AccountSmsFeature < BaseModel
    # TODO: Write general description for this method
    # @return [AccountSmsFeatureSettings]
    attr_accessor :sms_feature_settings

    # TODO: Write general description for this method
    # @return [SmppSettings]
    attr_accessor :smpp_settings

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['sms_feature_settings'] = 'smsFeatureSettings'
      @_hash['smpp_settings'] = 'smppSettings'
      @_hash
    end

    def initialize(sms_feature_settings = nil,
                   smpp_settings = nil)
      @sms_feature_settings = sms_feature_settings
      @smpp_settings = smpp_settings
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      if hash['smsFeatureSettings']
        sms_feature_settings = AccountSmsFeatureSettings.from_hash(hash['smsFeatureSettings'])
      end
      smpp_settings = SmppSettings.from_hash(hash['smppSettings']) if
        hash['smppSettings']

      # Create object from extracted values.
      AccountSmsFeature.new(sms_feature_settings,
                            smpp_settings)
    end

    def self.from_element(root)
      sms_feature_settings = XmlUtilities.from_element(
        root, 'AccountSmsFeatureSettings', AccountSmsFeatureSettings
      )
      smpp_settings = XmlUtilities.from_element(root, 'SmppSettings',
                                                SmppSettings)

      new(sms_feature_settings,
          smpp_settings)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'AccountSmsFeatureSettings',
                                     sms_feature_settings)
      XmlUtilities.add_as_subelement(doc, root, 'SmppSettings', smpp_settings)

      root
    end
  end
end
