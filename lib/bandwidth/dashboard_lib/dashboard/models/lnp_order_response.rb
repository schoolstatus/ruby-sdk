# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Bandwidth
  # LnpOrderResponse Model.
  class LnpOrderResponse < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :order_id

    # TODO: Write general description for this method
    # @return [ProcessingStatus4Enum]
    attr_accessor :processing_status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :bulk_portin_order_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :external_id

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :requested_foc_date

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :earliest_estimate

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :actual_foc_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :alternate_spid

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :billing_telephone_number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :new_billing_telephone_number

    # TODO: Write general description for this method
    # @return [Subscriber]
    attr_accessor :subscriber

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :loa_authorizing_person

    # TODO: Write general description for this method
    # @return [WirelessInfo]
    attr_accessor :wireless_info

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :numbers_to_port

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :vendor_order

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :account_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :site_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :peer_id

    # TODO: Write general description for this method
    # @return [List of LnpError]
    attr_accessor :errors

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :losing_carrier_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :losing_carrier_spid

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :losing_carrier_is_wireless

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :vendor_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :order_create_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_modified_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :user_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_modified_by

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :customer_order_id

    # TODO: Write general description for this method
    # @return [IrisStatus]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :nnspid

    # TODO: Write general description for this method
    # @return [PortOutStatusEnum]
    attr_accessor :port_out_status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :partial_port

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :immediately

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :triggered

    # TODO: Write general description for this method
    # @return [BillingTypeEnum]
    attr_accessor :billing_type

    # TODO: Write general description for this method
    # @return [PortInTypeEnum]
    attr_accessor :port_in_type

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :tn_attributes

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :auto_activation_type

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :override_validation

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :draft

    # TODO: Write general description for this method
    # @return [LnpCarrier]
    attr_accessor :losing_carrier_fields

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['order_id'] = 'orderId'
      @_hash['processing_status'] = 'processingStatus'
      @_hash['bulk_portin_order_id'] = 'bulkPortinOrderId'
      @_hash['external_id'] = 'externalId'
      @_hash['requested_foc_date'] = 'requestedFocDate'
      @_hash['earliest_estimate'] = 'earliestEstimate'
      @_hash['actual_foc_date'] = 'actualFocDate'
      @_hash['alternate_spid'] = 'alternateSpid'
      @_hash['billing_telephone_number'] = 'billingTelephoneNumber'
      @_hash['new_billing_telephone_number'] = 'newBillingTelephoneNumber'
      @_hash['subscriber'] = 'subscriber'
      @_hash['loa_authorizing_person'] = 'loaAuthorizingPerson'
      @_hash['wireless_info'] = 'wirelessInfo'
      @_hash['numbers_to_port'] = 'numbersToPort'
      @_hash['vendor_order'] = 'vendorOrder'
      @_hash['account_id'] = 'accountId'
      @_hash['site_id'] = 'siteId'
      @_hash['peer_id'] = 'peerId'
      @_hash['errors'] = 'errors'
      @_hash['losing_carrier_name'] = 'losingCarrierName'
      @_hash['losing_carrier_spid'] = 'losingCarrierSpid'
      @_hash['losing_carrier_is_wireless'] = 'losingCarrierIsWireless'
      @_hash['vendor_name'] = 'vendorName'
      @_hash['order_create_date'] = 'orderCreateDate'
      @_hash['last_modified_date'] = 'lastModifiedDate'
      @_hash['user_id'] = 'userId'
      @_hash['last_modified_by'] = 'lastModifiedBy'
      @_hash['customer_order_id'] = 'customerOrderId'
      @_hash['status'] = 'status'
      @_hash['nnspid'] = 'nnspid'
      @_hash['port_out_status'] = 'portOutStatus'
      @_hash['partial_port'] = 'partialPort'
      @_hash['immediately'] = 'immediately'
      @_hash['triggered'] = 'triggered'
      @_hash['billing_type'] = 'billingType'
      @_hash['port_in_type'] = 'portInType'
      @_hash['tn_attributes'] = 'tnAttributes'
      @_hash['auto_activation_type'] = 'autoActivationType'
      @_hash['override_validation'] = 'overrideValidation'
      @_hash['draft'] = 'draft'
      @_hash['losing_carrier_fields'] = 'losingCarrierFields'
      @_hash
    end

    def initialize(billing_telephone_number = nil,
                   new_billing_telephone_number = nil,
                   loa_authorizing_person = nil,
                   numbers_to_port = nil,
                   order_id = nil,
                   processing_status = nil,
                   bulk_portin_order_id = nil,
                   external_id = nil,
                   requested_foc_date = nil,
                   earliest_estimate = nil,
                   actual_foc_date = nil,
                   alternate_spid = nil,
                   subscriber = nil,
                   wireless_info = nil,
                   vendor_order = nil,
                   account_id = nil,
                   site_id = nil,
                   peer_id = nil,
                   errors = nil,
                   losing_carrier_name = nil,
                   losing_carrier_spid = nil,
                   losing_carrier_is_wireless = nil,
                   vendor_name = nil,
                   order_create_date = nil,
                   last_modified_date = nil,
                   user_id = nil,
                   last_modified_by = nil,
                   customer_order_id = nil,
                   status = nil,
                   nnspid = nil,
                   port_out_status = nil,
                   partial_port = nil,
                   immediately = nil,
                   triggered = nil,
                   billing_type = nil,
                   port_in_type = nil,
                   tn_attributes = nil,
                   auto_activation_type = nil,
                   override_validation = nil,
                   draft = nil,
                   losing_carrier_fields = nil)
      @order_id = order_id
      @processing_status = processing_status
      @bulk_portin_order_id = bulk_portin_order_id
      @external_id = external_id
      @requested_foc_date = requested_foc_date
      @earliest_estimate = earliest_estimate
      @actual_foc_date = actual_foc_date
      @alternate_spid = alternate_spid
      @billing_telephone_number = billing_telephone_number
      @new_billing_telephone_number = new_billing_telephone_number
      @subscriber = subscriber
      @loa_authorizing_person = loa_authorizing_person
      @wireless_info = wireless_info
      @numbers_to_port = numbers_to_port
      @vendor_order = vendor_order
      @account_id = account_id
      @site_id = site_id
      @peer_id = peer_id
      @errors = errors
      @losing_carrier_name = losing_carrier_name
      @losing_carrier_spid = losing_carrier_spid
      @losing_carrier_is_wireless = losing_carrier_is_wireless
      @vendor_name = vendor_name
      @order_create_date = order_create_date
      @last_modified_date = last_modified_date
      @user_id = user_id
      @last_modified_by = last_modified_by
      @customer_order_id = customer_order_id
      @status = status
      @nnspid = nnspid
      @port_out_status = port_out_status
      @partial_port = partial_port
      @immediately = immediately
      @triggered = triggered
      @billing_type = billing_type
      @port_in_type = port_in_type
      @tn_attributes = tn_attributes
      @auto_activation_type = auto_activation_type
      @override_validation = override_validation
      @draft = draft
      @losing_carrier_fields = losing_carrier_fields
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      billing_telephone_number = hash['billingTelephoneNumber']
      new_billing_telephone_number = hash['newBillingTelephoneNumber']
      loa_authorizing_person = hash['loaAuthorizingPerson']
      numbers_to_port = hash['numbersToPort']
      order_id = hash['orderId']
      processing_status = hash['processingStatus']
      bulk_portin_order_id = hash['bulkPortinOrderId']
      external_id = hash['externalId']
      requested_foc_date = APIHelper.rfc3339(hash['requestedFocDate']) if
        hash['requestedFocDate']
      earliest_estimate = APIHelper.rfc3339(hash['earliestEstimate']) if
        hash['earliestEstimate']
      actual_foc_date = APIHelper.rfc3339(hash['actualFocDate']) if
        hash['actualFocDate']
      alternate_spid = hash['alternateSpid']
      subscriber = Subscriber.from_hash(hash['subscriber']) if
        hash['subscriber']
      wireless_info = WirelessInfo.from_hash(hash['wirelessInfo']) if
        hash['wirelessInfo']
      vendor_order = hash['vendorOrder']
      account_id = hash['accountId']
      site_id = hash['siteId']
      peer_id = hash['peerId']
      # Parameter is an array, so we need to iterate through it
      errors = nil
      unless hash['errors'].nil?
        errors = []
        hash['errors'].each do |structure|
          errors << (LnpError.from_hash(structure) if structure)
        end
      end
      losing_carrier_name = hash['losingCarrierName']
      losing_carrier_spid = hash['losingCarrierSpid']
      losing_carrier_is_wireless = hash['losingCarrierIsWireless']
      vendor_name = hash['vendorName']
      order_create_date = hash['orderCreateDate']
      last_modified_date = hash['lastModifiedDate']
      user_id = hash['userId']
      last_modified_by = hash['lastModifiedBy']
      customer_order_id = hash['customerOrderId']
      status = IrisStatus.from_hash(hash['status']) if hash['status']
      nnspid = hash['nnspid']
      port_out_status = hash['portOutStatus']
      partial_port = hash['partialPort']
      immediately = hash['immediately']
      triggered = hash['triggered']
      billing_type = hash['billingType']
      port_in_type = hash['portInType']
      tn_attributes = hash['tnAttributes']
      auto_activation_type = hash['autoActivationType']
      override_validation = hash['overrideValidation']
      draft = hash['draft']
      if hash['losingCarrierFields']
        losing_carrier_fields = LnpCarrier.from_hash(hash['losingCarrierFields'])
      end

      # Create object from extracted values.
      LnpOrderResponse.new(billing_telephone_number,
                           new_billing_telephone_number,
                           loa_authorizing_person,
                           numbers_to_port,
                           order_id,
                           processing_status,
                           bulk_portin_order_id,
                           external_id,
                           requested_foc_date,
                           earliest_estimate,
                           actual_foc_date,
                           alternate_spid,
                           subscriber,
                           wireless_info,
                           vendor_order,
                           account_id,
                           site_id,
                           peer_id,
                           errors,
                           losing_carrier_name,
                           losing_carrier_spid,
                           losing_carrier_is_wireless,
                           vendor_name,
                           order_create_date,
                           last_modified_date,
                           user_id,
                           last_modified_by,
                           customer_order_id,
                           status,
                           nnspid,
                           port_out_status,
                           partial_port,
                           immediately,
                           triggered,
                           billing_type,
                           port_in_type,
                           tn_attributes,
                           auto_activation_type,
                           override_validation,
                           draft,
                           losing_carrier_fields)
    end

    def self.from_element(root)
      billing_telephone_number = XmlUtilities.from_element(
        root, 'BillingTelephoneNumber', String
      )
      new_billing_telephone_number = XmlUtilities.from_element(
        root, 'NewBillingTelephoneNumber', String
      )
      loa_authorizing_person = XmlUtilities.from_element(root,
                                                         'LoaAuthorizingPerson',
                                                         String)
      numbers_to_port = XmlUtilities.from_element_to_array(
        root, 'PhoneNumber', String,
        wrapping_element_name: 'ListOfPhoneNumbers'
      )
      order_id = XmlUtilities.from_element(root, 'OrderId', String)
      processing_status = XmlUtilities.from_element(root, 'ProcessingStatus',
                                                    String)
      bulk_portin_order_id = XmlUtilities.from_element(root,
                                                       'BulkPortinOrderId',
                                                       String)
      external_id = XmlUtilities.from_element(root, 'ExternalId', String)
      requested_foc_date = XmlUtilities.from_element(root, 'RequestedFocDate',
                                                     String,
                                                     datetime_format: 'rfc3339')
      earliest_estimate = XmlUtilities.from_element(root, 'EarliestEstimate',
                                                    String,
                                                    datetime_format: 'rfc3339')
      actual_foc_date = XmlUtilities.from_element(root, 'ActualFocDate', String,
                                                  datetime_format: 'rfc3339')
      alternate_spid = XmlUtilities.from_element(root, 'AlternateSpid', String)
      subscriber = XmlUtilities.from_element(root, 'Subscriber', Subscriber)
      wireless_info = XmlUtilities.from_element(root, 'WirelessInfo',
                                                WirelessInfo)
      vendor_order = XmlUtilities.from_element(root, 'PON', String)
      account_id = XmlUtilities.from_element(root, 'AccountId', Integer)
      site_id = XmlUtilities.from_element(root, 'SiteId', Integer)
      peer_id = XmlUtilities.from_element(root, 'PeerId', Integer)
      errors = XmlUtilities.from_element_to_array(root, 'Errors', LnpError)
      losing_carrier_name = XmlUtilities.from_element(root, 'LosingCarrierName',
                                                      String)
      losing_carrier_spid = XmlUtilities.from_element(root, 'LosingCarrierSPID',
                                                      String)
      losing_carrier_is_wireless = XmlUtilities.from_element(
        root, 'LosingCarrierIsWireless', String
      )
      vendor_name = XmlUtilities.from_element(root, 'VendorName', String)
      order_create_date = XmlUtilities.from_element(root, 'OrderCreateDate',
                                                    String)
      last_modified_date = XmlUtilities.from_element(root, 'LastModifiedDate',
                                                     String)
      user_id = XmlUtilities.from_element(root, 'userId', String)
      last_modified_by = XmlUtilities.from_element(root, 'LastModifiedBy',
                                                   String)
      customer_order_id = XmlUtilities.from_element(root, 'CustomerOrderId',
                                                    String)
      status = XmlUtilities.from_element(root, 'Status', IrisStatus)
      nnspid = XmlUtilities.from_element(root, 'SPID', String)
      port_out_status = XmlUtilities.from_element(root, 'PortOutStatus', String)
      partial_port = XmlUtilities.from_element(root, 'PartialPort', String)
      immediately = XmlUtilities.from_element(root, 'Immediately', TrueClass)
      triggered = XmlUtilities.from_element(root, 'Triggered', TrueClass)
      billing_type = XmlUtilities.from_element(root, 'BillingType', String)
      port_in_type = XmlUtilities.from_element(root, 'PortType', String)
      tn_attributes = XmlUtilities.from_element_to_array(
        root, 'TnAttribute', String,
        wrapping_element_name: 'TnAttributes'
      )
      auto_activation_type = XmlUtilities.from_element(root, 'AutoActivation',
                                                       String)
      override_validation = XmlUtilities.from_element(root,
                                                      'OverrideValidation',
                                                      TrueClass)
      draft = XmlUtilities.from_element(root, 'draft', TrueClass)
      losing_carrier_fields = XmlUtilities.from_element(root, 'Tpa', LnpCarrier)

      new(billing_telephone_number,
          new_billing_telephone_number,
          loa_authorizing_person,
          numbers_to_port,
          order_id,
          processing_status,
          bulk_portin_order_id,
          external_id,
          requested_foc_date,
          earliest_estimate,
          actual_foc_date,
          alternate_spid,
          subscriber,
          wireless_info,
          vendor_order,
          account_id,
          site_id,
          peer_id,
          errors,
          losing_carrier_name,
          losing_carrier_spid,
          losing_carrier_is_wireless,
          vendor_name,
          order_create_date,
          last_modified_date,
          user_id,
          last_modified_by,
          customer_order_id,
          status,
          nnspid,
          port_out_status,
          partial_port,
          immediately,
          triggered,
          billing_type,
          port_in_type,
          tn_attributes,
          auto_activation_type,
          override_validation,
          draft,
          losing_carrier_fields)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'BillingTelephoneNumber',
                                     billing_telephone_number)
      XmlUtilities.add_as_subelement(doc, root, 'NewBillingTelephoneNumber',
                                     new_billing_telephone_number)
      XmlUtilities.add_as_subelement(doc, root, 'LoaAuthorizingPerson',
                                     loa_authorizing_person)
      XmlUtilities.add_array_as_subelement(
        doc, root, 'PhoneNumber', numbers_to_port,
        wrapping_element_name: 'ListOfPhoneNumbers'
      )
      XmlUtilities.add_as_subelement(doc, root, 'OrderId', order_id)
      XmlUtilities.add_as_subelement(doc, root, 'ProcessingStatus',
                                     processing_status)
      XmlUtilities.add_as_subelement(doc, root, 'BulkPortinOrderId',
                                     bulk_portin_order_id)
      XmlUtilities.add_as_subelement(doc, root, 'ExternalId', external_id)
      XmlUtilities.add_as_subelement(doc, root, 'RequestedFocDate',
                                     requested_foc_date,
                                     datetime_format: 'rfc3339')
      XmlUtilities.add_as_subelement(doc, root, 'EarliestEstimate',
                                     earliest_estimate,
                                     datetime_format: 'rfc3339')
      XmlUtilities.add_as_subelement(doc, root, 'ActualFocDate',
                                     actual_foc_date,
                                     datetime_format: 'rfc3339')
      XmlUtilities.add_as_subelement(doc, root, 'AlternateSpid', alternate_spid)
      XmlUtilities.add_as_subelement(doc, root, 'Subscriber', subscriber)
      XmlUtilities.add_as_subelement(doc, root, 'WirelessInfo', wireless_info)
      XmlUtilities.add_as_subelement(doc, root, 'PON', vendor_order)
      XmlUtilities.add_as_subelement(doc, root, 'AccountId', account_id)
      XmlUtilities.add_as_subelement(doc, root, 'SiteId', site_id)
      XmlUtilities.add_as_subelement(doc, root, 'PeerId', peer_id)
      XmlUtilities.add_array_as_subelement(doc, root, 'Errors', errors)
      XmlUtilities.add_as_subelement(doc, root, 'LosingCarrierName',
                                     losing_carrier_name)
      XmlUtilities.add_as_subelement(doc, root, 'LosingCarrierSPID',
                                     losing_carrier_spid)
      XmlUtilities.add_as_subelement(doc, root, 'LosingCarrierIsWireless',
                                     losing_carrier_is_wireless)
      XmlUtilities.add_as_subelement(doc, root, 'VendorName', vendor_name)
      XmlUtilities.add_as_subelement(doc, root, 'OrderCreateDate',
                                     order_create_date)
      XmlUtilities.add_as_subelement(doc, root, 'LastModifiedDate',
                                     last_modified_date)
      XmlUtilities.add_as_subelement(doc, root, 'userId', user_id)
      XmlUtilities.add_as_subelement(doc, root, 'LastModifiedBy',
                                     last_modified_by)
      XmlUtilities.add_as_subelement(doc, root, 'CustomerOrderId',
                                     customer_order_id)
      XmlUtilities.add_as_subelement(doc, root, 'Status', status)
      XmlUtilities.add_as_subelement(doc, root, 'SPID', nnspid)
      XmlUtilities.add_as_subelement(doc, root, 'PortOutStatus',
                                     port_out_status)
      XmlUtilities.add_as_subelement(doc, root, 'PartialPort', partial_port)
      XmlUtilities.add_as_subelement(doc, root, 'Immediately', immediately)
      XmlUtilities.add_as_subelement(doc, root, 'Triggered', triggered)
      XmlUtilities.add_as_subelement(doc, root, 'BillingType', billing_type)
      XmlUtilities.add_as_subelement(doc, root, 'PortType', port_in_type)
      XmlUtilities.add_array_as_subelement(
        doc, root, 'TnAttribute', tn_attributes,
        wrapping_element_name: 'TnAttributes'
      )
      XmlUtilities.add_as_subelement(doc, root, 'AutoActivation',
                                     auto_activation_type)
      XmlUtilities.add_as_subelement(doc, root, 'OverrideValidation',
                                     override_validation)
      XmlUtilities.add_as_subelement(doc, root, 'draft', draft)
      XmlUtilities.add_as_subelement(doc, root, 'Tpa', losing_carrier_fields)

      root
    end
  end
end
