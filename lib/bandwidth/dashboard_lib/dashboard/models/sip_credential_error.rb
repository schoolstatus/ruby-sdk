# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SipCredentialError Model.
  class SipCredentialError < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :description

    # TODO: Write general description for this method
    # @return [SipCredential]
    attr_accessor :sip_credential

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['code'] = 'code'
      @_hash['description'] = 'description'
      @_hash['sip_credential'] = 'sipCredential'
      @_hash
    end

    def initialize(code = nil,
                   description = nil,
                   sip_credential = nil)
      @code = code
      @description = description
      @sip_credential = sip_credential
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      code = hash['code']
      description = hash['description']
      sip_credential = SipCredential.from_hash(hash['sipCredential']) if
        hash['sipCredential']

      # Create object from extracted values.
      SipCredentialError.new(code,
                             description,
                             sip_credential)
    end

    def self.from_element(root)
      code = XmlUtilities.from_element(root, 'ErrorCode', Integer)
      description = XmlUtilities.from_element(root, 'Description', String)
      sip_credential = XmlUtilities.from_element(root, 'SipCredential',
                                                 SipCredential)

      new(code,
          description,
          sip_credential)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'ErrorCode', code)
      XmlUtilities.add_as_subelement(doc, root, 'Description', description)
      XmlUtilities.add_as_subelement(doc, root, 'SipCredential', sip_credential)

      root
    end
  end
end
