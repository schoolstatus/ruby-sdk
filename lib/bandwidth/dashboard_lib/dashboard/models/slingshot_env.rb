# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SlingshotEnv Model.
  class SlingshotEnv < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :sippeer_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :value

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['sippeer_id'] = 'sippeerId'
      @_hash['value'] = 'value'
      @_hash
    end

    def initialize(sippeer_id = nil,
                   value = nil)
      @sippeer_id = sippeer_id
      @value = value
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      sippeer_id = hash['sippeerId']
      value = hash['value']

      # Create object from extracted values.
      SlingshotEnv.new(sippeer_id,
                       value)
    end

    def self.from_element(root)
      sippeer_id = XmlUtilities.from_element(root, 'SipPeerId', Integer)
      value = XmlUtilities.from_element(root, 'Value', String)

      new(sippeer_id,
          value)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'SipPeerId', sippeer_id)
      XmlUtilities.add_as_subelement(doc, root, 'Value', value)

      root
    end
  end
end
