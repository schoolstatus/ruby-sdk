# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # TerminationProductAssignment Model.
  class TerminationProductAssignment < BaseModel
    # TODO: Write general description for this method
    # @return [Long]
    attr_accessor :attribute_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :product_name

    # TODO: Write general description for this method
    # @return [Hash]
    attr_accessor :attributes

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['attribute_id'] = 'attributeId'
      @_hash['product_name'] = 'productName'
      @_hash['attributes'] = 'attributes'
      @_hash
    end

    def initialize(attribute_id = nil,
                   product_name = nil,
                   attributes = nil)
      @attribute_id = attribute_id
      @product_name = product_name
      @attributes = attributes
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      attribute_id = hash['attributeId']
      product_name = hash['productName']
      attributes = hash['attributes']

      # Create object from extracted values.
      TerminationProductAssignment.new(attribute_id,
                                       product_name,
                                       attributes)
    end

    def self.from_element(root)
      attribute_id = XmlUtilities.from_element(root, 'attributeId', Integer)
      product_name = XmlUtilities.from_element(root, 'productName', String)
      attributes = XmlUtilities.from_element_to_hash(root, 'attributes', Hash)

      new(attribute_id,
          product_name,
          attributes)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'attributeId', attribute_id)
      XmlUtilities.add_as_subelement(doc, root, 'productName', product_name)
      XmlUtilities.add_hash_as_subelement(doc, root, 'attributes', attributes)

      root
    end
  end
end
