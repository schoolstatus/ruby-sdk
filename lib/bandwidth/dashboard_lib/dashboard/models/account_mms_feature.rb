# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # AccountMmsFeature Model.
  class AccountMmsFeature < BaseModel
    # TODO: Write general description for this method
    # @return [AccountMmsFeatureSettings]
    attr_accessor :mms_feature_settings

    # TODO: Write general description for this method
    # @return [Mm4Settings]
    attr_accessor :mm4_settings

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['mms_feature_settings'] = 'mmsFeatureSettings'
      @_hash['mm4_settings'] = 'mm4Settings'
      @_hash
    end

    def initialize(mms_feature_settings = nil,
                   mm4_settings = nil)
      @mms_feature_settings = mms_feature_settings
      @mm4_settings = mm4_settings
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      if hash['mmsFeatureSettings']
        mms_feature_settings = AccountMmsFeatureSettings.from_hash(hash['mmsFeatureSettings'])
      end
      mm4_settings = Mm4Settings.from_hash(hash['mm4Settings']) if
        hash['mm4Settings']

      # Create object from extracted values.
      AccountMmsFeature.new(mms_feature_settings,
                            mm4_settings)
    end

    def self.from_element(root)
      mms_feature_settings = XmlUtilities.from_element(
        root, 'MmsSettings', AccountMmsFeatureSettings
      )
      mm4_settings = XmlUtilities.from_element(root, 'MM4Settings', Mm4Settings)

      new(mms_feature_settings,
          mm4_settings)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'MmsSettings',
                                     mms_feature_settings)
      XmlUtilities.add_as_subelement(doc, root, 'MM4Settings', mm4_settings)

      root
    end
  end
end
