# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SipPeerTerminationProducts Model.
  class SipPeerTerminationProducts < BaseModel
    # TODO: Write general description for this method
    # @return [SipPeerTerminationSettings]
    attr_accessor :termination_settings

    # TODO: Write general description for this method
    # @return [SipPeerGatewayIps1]
    attr_accessor :sip_peer_gateway_ips

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['termination_settings'] = 'terminationSettings'
      @_hash['sip_peer_gateway_ips'] = 'sipPeerGatewayIps'
      @_hash
    end

    def initialize(termination_settings = nil,
                   sip_peer_gateway_ips = nil)
      @termination_settings = termination_settings
      @sip_peer_gateway_ips = sip_peer_gateway_ips
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      if hash['terminationSettings']
        termination_settings = SipPeerTerminationSettings.from_hash(hash['terminationSettings'])
      end
      if hash['sipPeerGatewayIps']
        sip_peer_gateway_ips = SipPeerGatewayIps1.from_hash(hash['sipPeerGatewayIps'])
      end

      # Create object from extracted values.
      SipPeerTerminationProducts.new(termination_settings,
                                     sip_peer_gateway_ips)
    end

    def self.from_element(root)
      termination_settings = XmlUtilities.from_element(
        root, 'TerminationSettings', SipPeerTerminationSettings
      )
      sip_peer_gateway_ips = XmlUtilities.from_element(root, 'TerminationHosts',
                                                       SipPeerGatewayIps1)

      new(termination_settings,
          sip_peer_gateway_ips)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'TerminationSettings',
                                     termination_settings)
      XmlUtilities.add_as_subelement(doc, root, 'TerminationHosts',
                                     sip_peer_gateway_ips)

      root
    end
  end
end
