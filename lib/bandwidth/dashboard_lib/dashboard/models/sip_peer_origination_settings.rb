# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # SipPeerOriginationSettings Model.
  class SipPeerOriginationSettings < BaseModel
    # TODO: Write general description for this method
    # @return [SipPeerHttpSettings]
    attr_accessor :http_settings

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :voice_protocol

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['http_settings'] = 'httpSettings'
      @_hash['voice_protocol'] = 'voiceProtocol'
      @_hash
    end

    def initialize(http_settings = nil,
                   voice_protocol = nil)
      @http_settings = http_settings
      @voice_protocol = voice_protocol
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      http_settings = SipPeerHttpSettings.from_hash(hash['httpSettings']) if
        hash['httpSettings']
      voice_protocol = hash['voiceProtocol']

      # Create object from extracted values.
      SipPeerOriginationSettings.new(http_settings,
                                     voice_protocol)
    end

    def self.from_element(root)
      http_settings = XmlUtilities.from_element(root, 'HttpSettings',
                                                SipPeerHttpSettings)
      voice_protocol = XmlUtilities.from_element(root, 'VoiceProtocol', String)

      new(http_settings,
          voice_protocol)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'HttpSettings', http_settings)
      XmlUtilities.add_as_subelement(doc, root, 'VoiceProtocol', voice_protocol)

      root
    end
  end
end
