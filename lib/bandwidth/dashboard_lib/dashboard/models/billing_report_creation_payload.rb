# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # BillingReportCreationPayload Model.
  class BillingReportCreationPayload < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :report_type

    # TODO: Write general description for this method
    # @return [BillingReportDateRange]
    attr_accessor :report_date_range

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['report_type'] = 'reportType'
      @_hash['report_date_range'] = 'reportDateRange'
      @_hash
    end

    def initialize(report_type = nil,
                   report_date_range = nil)
      @report_type = report_type
      @report_date_range = report_date_range
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      report_type = hash['reportType']
      if hash['reportDateRange']
        report_date_range = BillingReportDateRange.from_hash(hash['reportDateRange'])
      end

      # Create object from extracted values.
      BillingReportCreationPayload.new(report_type,
                                       report_date_range)
    end

    def self.from_element(root)
      report_type = XmlUtilities.from_element(root, 'Type', String)
      report_date_range = XmlUtilities.from_element(root, 'DateRange',
                                                    BillingReportDateRange)

      new(report_type,
          report_date_range)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'Type', report_type)
      XmlUtilities.add_as_subelement(doc, root, 'DateRange', report_date_range)

      root
    end
  end
end
