# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # EndpointResource Model.
  class EndpointResource < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :uri_method

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :uri_path

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['uri_method'] = 'uriMethod'
      @_hash['uri_path'] = 'uriPath'
      @_hash
    end

    def initialize(uri_method = nil,
                   uri_path = nil)
      @uri_method = uri_method
      @uri_path = uri_path
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      uri_method = hash['uriMethod']
      uri_path = hash['uriPath']

      # Create object from extracted values.
      EndpointResource.new(uri_method,
                           uri_path)
    end

    def self.from_element(root)
      uri_method = XmlUtilities.from_element(root, 'Method', String)
      uri_path = XmlUtilities.from_element(root, 'Path', String)

      new(uri_method,
          uri_path)
    end

    def to_xml_element(doc, root_name)
      root = doc.create_element(root_name)

      XmlUtilities.add_as_subelement(doc, root, 'Method', uri_method)
      XmlUtilities.add_as_subelement(doc, root, 'Path', uri_path)

      root
    end
  end
end
